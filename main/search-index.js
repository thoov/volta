var searchIndex = JSON.parse('{\
"archive":{"doc":"This crate provides types for fetching and unpacking…","i":[[3,"Tarball","archive","A Node installation tarball.",null,null],[12,"compressed_size","","",0,null],[12,"uncompressed_size","","",0,null],[12,"data","","",0,null],[12,"origin","","",0,null],[3,"Zip","","",null,null],[12,"compressed_size","","",1,null],[12,"data","","",1,null],[12,"origin","","",1,null],[4,"ArchiveError","","Error type for this crate",null,null],[13,"HttpError","","",2,null],[13,"MissingHeaderError","","",2,null],[13,"UnexpectedContentLengthError","","",2,null],[13,"IoError","","",2,null],[13,"AttohttpcError","","",2,null],[13,"ZipError","","",2,null],[4,"Origin","","Metadata describing whether an archive comes from a local…",null,null],[13,"Local","","",3,null],[13,"Remote","","",3,null],[5,"load_native","","Load an archive in the native OS-preferred format from the…",null,[[["file",3]],[["archiveerror",4],["result",4],["box",3]]]],[5,"fetch_native","","Fetch a remote archive in the native OS-preferred format…",null,[[["path",3]],[["archiveerror",4],["result",4],["box",3]]]],[0,"tarball","","Provides types and functions for fetching and unpacking a…",null,null],[3,"Tarball","archive::tarball","A Node installation tarball.",null,null],[12,"compressed_size","","",0,null],[12,"uncompressed_size","","",0,null],[12,"data","","",0,null],[12,"origin","","",0,null],[5,"content_length","","Determines the length of an HTTP response\'s content in…",null,[[["headermap",3]],[["result",4],["archiveerror",4]]]],[5,"unpack_isize","","Unpacks the `isize` field from a gzip payload as a 64-bit…",null,[[]]],[5,"fetch_isize","","Fetches just the `isize` field (the field that indicates…",null,[[],[["result",4],["archiveerror",4]]]],[5,"load_isize","","Loads the `isize` field (the field that indicates the…",null,[[["file",3]],[["result",4],["archiveerror",4]]]],[5,"accepts_byte_ranges","","",null,[[["headermap",3]]]],[5,"fetch_uncompressed_size","","Determines the uncompressed size of a gzip file hosted at…",null,[[],["option",4]]],[5,"load_uncompressed_size","","Determines the uncompressed size of the specified gzip…",null,[[["file",3]],["option",4]]],[11,"load","archive","Loads a tarball from the specified file.",0,[[["file",3]],[["archiveerror",4],["result",4],["box",3]]]],[11,"fetch","","Initiate fetching of a tarball from the given URL,…",0,[[["path",3]],[["archiveerror",4],["result",4],["box",3]]]],[0,"zip","","Provides types and functions for fetching and unpacking a…",null,null],[3,"Zip","archive::zip","",null,null],[12,"compressed_size","","",1,null],[12,"data","","",1,null],[12,"origin","","",1,null],[11,"load","archive","Loads a cached Node zip archive from the specified file.",1,[[["file",3]],[["archiveerror",4],["result",4],["box",3]]]],[11,"fetch","","Initiate fetching of a Node zip archive from the given…",1,[[["path",3]],[["archiveerror",4],["result",4],["box",3]]]],[8,"Archive","","",null,null],[10,"compressed_size","","",4,[[]]],[10,"uncompressed_size","","",4,[[],["option",4]]],[10,"unpack","","Unpacks the zip archive to the specified destination folder.",4,[[["box",3],["path",3],["fnmut",8]],[["archiveerror",4],["result",4]]]],[10,"origin","","",4,[[],["origin",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"compressed_size","","",0,[[]]],[11,"uncompressed_size","","",0,[[],["option",4]]],[11,"unpack","","",0,[[["box",3],["path",3],["fnmut",8]],[["archiveerror",4],["result",4]]]],[11,"origin","","",0,[[],["origin",4]]],[11,"compressed_size","","",1,[[]]],[11,"uncompressed_size","","",1,[[],["option",4]]],[11,"unpack","","",1,[[["box",3],["path",3],["fnmut",8]],[["archiveerror",4],["result",4]]]],[11,"origin","","",1,[[],["origin",4]]],[11,"from","","",2,[[["error",3]]]],[11,"from","","",2,[[["error",3]]]],[11,"from","","",2,[[["ziperror",4]]]],[11,"clone","","",3,[[],["origin",4]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"source","","",2,[[],[["error",8],["option",4]]]]],"p":[[3,"Tarball"],[3,"Zip"],[4,"ArchiveError"],[4,"Origin"],[8,"Archive"]]},\
"fs_utils":{"doc":"This crate provides utilities for operating on the…","i":[[5,"ensure_containing_dir_exists","fs_utils","This creates the parent directory of the input path,…",null,[[],["result",6]]]],"p":[]},\
"progress_read":{"doc":"This crate provides an adapter for the `std::io::Read`…","i":[[3,"ProgressRead","progress_read","A reader that reports incremental progress while reading.",null,null],[12,"source","","",0,null],[12,"accumulator","","",0,null],[12,"progress","","",0,null],[11,"new","","Construct a new progress reader with the specified…",0,[[],["progressread",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"read","","Read some bytes from the underlying reader into the…",0,[[],["result",6]]],[11,"seek","","",0,[[["seekfrom",4]],["result",6]]]],"p":[[3,"ProgressRead"]]},\
"test_support":{"doc":"Utilities to use with acceptance tests in Volta.","i":[[0,"matchers","test_support","",null,null],[3,"Execs","test_support::matchers","",null,null],[12,"expect_stdout","","",0,null],[12,"expect_stdin","","",0,null],[12,"expect_stderr","","",0,null],[12,"expect_exit_code","","",0,null],[12,"expect_stdout_contains","","",0,null],[12,"expect_stderr_contains","","",0,null],[12,"expect_either_contains","","",0,null],[12,"expect_stdout_contains_n","","",0,null],[12,"expect_stdout_not_contains","","",0,null],[12,"expect_stderr_not_contains","","",0,null],[12,"expect_stderr_unordered","","",0,null],[12,"expect_neither_contains","","",0,null],[12,"expect_json","","",0,null],[3,"ZipAll","","",null,null],[12,"first","","",1,null],[12,"second","","",1,null],[4,"MatchKind","","",null,null],[13,"Exact","","",2,null],[13,"Partial","","",2,null],[13,"PartialN","","",2,null],[13,"NotPresent","","",2,null],[13,"Unordered","","",2,null],[5,"lines_match","","Compare a line with an expected pattern. - Use `[..]` as a…",null,[[]]],[5,"find_mismatch","","",null,[[["value",4]],["option",4]]],[5,"zip_all","","",null,[[["iterator",8]],[["zipall",3],["iterator",8]]]],[5,"execs","","",null,[[],["execs",3]]],[5,"substitute_macros","","",null,[[],["string",3]]],[11,"with_stdout","","Verify that stdout is equal to the given lines. See…",0,[[["tostring",8]],["execs",3]]],[11,"with_stderr","","Verify that stderr is equal to the given lines. See…",0,[[["tostring",8]],["execs",3]]],[11,"_with_stderr","","",0,[[["tostring",8]]]],[11,"with_status","","Verify the exit code from the process.",0,[[],["execs",3]]],[11,"with_stdout_contains","","Verify that stdout contains the given contiguous lines…",0,[[["tostring",8]],["execs",3]]],[11,"with_stderr_contains","","Verify that stderr contains the given contiguous lines…",0,[[["tostring",8]],["execs",3]]],[11,"with_either_contains","","Verify that either stdout or stderr contains the given…",0,[[["tostring",8]],["execs",3]]],[11,"with_stdout_contains_n","","Verify that stdout contains the given contiguous lines…",0,[[["tostring",8]],["execs",3]]],[11,"with_stdout_does_not_contain","","Verify that stdout does not contain the given contiguous…",0,[[["tostring",8]],["execs",3]]],[11,"with_stderr_does_not_contain","","Verify that stderr does not contain the given contiguous…",0,[[["tostring",8]],["execs",3]]],[11,"with_stderr_unordered","","Verify that all of the stderr output is equal to the given…",0,[[["tostring",8]],["execs",3]]],[11,"with_json","","Verify the JSON output matches the given JSON. Typically…",0,[[],["execs",3]]],[11,"match_output","","",0,[[["output",3]],["matchresult",6]]],[11,"match_status","","",0,[[["output",3]],["matchresult",6]]],[11,"match_stdout","","",0,[[["output",3]],["matchresult",6]]],[11,"match_stderr","","",0,[[["output",3]],["matchresult",6]]],[11,"match_std","","",0,[[["matchkind",4],["string",3],["option",4]],["matchresult",6]]],[11,"match_json","","",0,[[["value",4]],["matchresult",6]]],[11,"diff_lines","","",0,[[["lines",3]],[["vec",3],["string",3]]]],[0,"paths","test_support","",null,null],[4,"Remove","test_support::paths","",null,null],[13,"File","","",3,null],[13,"Dir","","",3,null],[5,"init","","",null,[[]]],[5,"global_root","","",null,[[],["pathbuf",3]]],[5,"root","","",null,[[],["pathbuf",3]]],[5,"home","","",null,[[],["pathbuf",3]]],[7,"SMOKE_TEST_DIR","","",null,null],[7,"NEXT_ID","","",null,null],[17,"TASK_ID","","",null,null],[8,"PathExt","","",null,null],[10,"rm","","",4,[[]]],[10,"rm_rf","","",4,[[]]],[10,"rm_contents","","",4,[[]]],[10,"ensure_empty","","",4,[[]]],[10,"mkdir_p","","",4,[[]]],[11,"to_str","","",3,[[]]],[11,"at","","",3,[[["path",3]]]],[0,"process","test_support","",null,null],[3,"ProcessBuilder","test_support::process","A builder object for an external process, similar to…",null,null],[12,"program","","The program to execute.",5,null],[12,"args","","A list of arguments to pass to the program.",5,null],[12,"env","","Any environment variables that should be set for the…",5,null],[12,"cwd","","Which directory to run the program from.",5,null],[3,"ProcessError","","",null,null],[12,"desc","","",6,null],[12,"exit","","",6,null],[12,"output","","",6,null],[5,"process","","A helper function to create a `ProcessBuilder`.",null,[[["asref",8],["osstr",3]],["processbuilder",3]]],[5,"process_error","","",null,[[["exitstatus",3],["option",4],["option",4],["output",3]],["processerror",3]]],[11,"program","","(chainable) Set the executable for the process.",5,[[["asref",8],["osstr",3]],["processbuilder",3]]],[11,"arg","","(chainable) Add an arg to the args list.",5,[[["asref",8],["osstr",3]],["processbuilder",3]]],[11,"args","","(chainable) Add many args to the args list.",5,[[],["processbuilder",3]]],[11,"args_replace","","(chainable) Replace args with new args list",5,[[],["processbuilder",3]]],[11,"cwd","","(chainable) Set the current working directory of the process",5,[[["asref",8],["osstr",3]],["processbuilder",3]]],[11,"env","","(chainable) Set an environment variable for the process.",5,[[["asref",8],["osstr",3]],["processbuilder",3]]],[11,"env_remove","","(chainable) Unset an environment variable for the process.",5,[[],["processbuilder",3]]],[11,"get_program","","Get the executable name.",5,[[],["osstring",3]]],[11,"get_args","","Get the program arguments",5,[[]]],[11,"get_cwd","","Get the current working directory for the process",5,[[],[["option",4],["path",3]]]],[11,"get_env","","Get an environment variable as the process will see it…",5,[[],[["osstring",3],["option",4]]]],[11,"get_envs","","Get all environment variables explicitly set or unset for…",5,[[],["hashmap",3]]],[11,"exec","","Run the process, waiting for completion, and mapping…",5,[[],[["result",4],["processerror",3]]]],[11,"exec_with_output","","Execute the process, returning the stdio output, or an…",5,[[],[["processerror",3],["output",3],["result",4]]]],[11,"build_command","","Converts ProcessBuilder into a `std::process::Command`",5,[[],["command",3]]],[14,"ok_or_panic","test_support","",null,null],[11,"from","test_support::matchers","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"equivalent","","",2,[[]]],[11,"from","test_support::paths","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","test_support::process","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"next","test_support::matchers","",1,[[],["option",4]]],[11,"clone","","",0,[[],["execs",3]]],[11,"clone","","",2,[[],["matchkind",4]]],[11,"clone","test_support::process","",5,[[],["processbuilder",3]]],[11,"eq","test_support::matchers","",2,[[["matchkind",4]]]],[11,"ne","","",2,[[["matchkind",4]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","test_support::process","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","test_support::matchers","",0,[[["formatter",3]],["result",6]]],[11,"fmt","test_support::process","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"matches","test_support::matchers","",0,[[["processbuilder",3]],["matchresult",6]]],[11,"matches","","",0,[[["processbuilder",3]],["matchresult",6]]],[11,"matches","","",0,[[["output",3]],["matchresult",6]]]],"p":[[3,"Execs"],[3,"ZipAll"],[4,"MatchKind"],[4,"Remove"],[8,"PathExt"],[3,"ProcessBuilder"],[3,"ProcessError"]]},\
"validate_npm_package_name":{"doc":"A Rust implementation of the validation rules from the…","i":[[3,"SCOPED_PACKAGE","validate_npm_package_name","",null,null],[12,"__private_field","","",0,null],[3,"SPECIAL_CHARS","","",null,null],[12,"__private_field","","",1,null],[3,"BLACKLIST","","",null,null],[12,"__private_field","","",2,null],[3,"BUILTINS","","",null,null],[12,"__private_field","","",3,null],[4,"Validity","","",null,null],[13,"Valid","","Valid for new and old packages",4,null],[13,"ValidForOldPackages","","Valid only for old packages",4,null],[12,"warnings","validate_npm_package_name::Validity","",5,null],[13,"Invalid","validate_npm_package_name","Not valid for new or old packages",4,null],[12,"warnings","validate_npm_package_name::Validity","",6,null],[12,"errors","","",6,null],[5,"validate","validate_npm_package_name","",null,[[],["validity",4]]],[5,"done","","",null,[[["vec",3],["string",3]],["validity",4]]],[11,"valid_for_old_packages","","",4,[[]]],[11,"valid_for_new_packages","","",4,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"eq","","",4,[[["validity",4]]]],[11,"ne","","",4,[[["validity",4]]]],[11,"deref","","",0,[[],["regex",3]]],[11,"deref","","",1,[[],["regex",3]]],[11,"deref","","",2,[[],["vec",3]]],[11,"deref","","",3,[[],["vec",3]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"initialize","","",0,[[]]],[11,"initialize","","",1,[[]]],[11,"initialize","","",2,[[]]],[11,"initialize","","",3,[[]]]],"p":[[3,"SCOPED_PACKAGE"],[3,"SPECIAL_CHARS"],[3,"BLACKLIST"],[3,"BUILTINS"],[4,"Validity"],[13,"ValidForOldPackages"],[13,"Invalid"]]},\
"volta":{"doc":"","i":[[5,"main","volta","The entry point for the `volta` CLI.",null,[[]]],[0,"command","","",null,null],[0,"completions","volta::command","",null,null],[3,"Completions","volta::command::completions","",null,null],[12,"shell","","Shell to generate completions for",0,null],[12,"out_file","","File to write generated completions to",0,null],[12,"force","","Write over an existing file, if any.",0,null],[0,"fetch","volta::command","",null,null],[3,"Fetch","volta::command::fetch","",null,null],[12,"tools","","Tools to fetch, like `node`, `yarn@latest` or…",1,null],[0,"install","volta::command","",null,null],[3,"Install","volta::command::install","",null,null],[12,"tools","","Tools to install, like `node`, `yarn@latest` or…",2,null],[0,"list","volta::command","",null,null],[3,"PackageDetails","volta::command::list","A package and its associated tools, for displaying to the…",null,null],[12,"name","","The name of the package.",3,null],[12,"version","","The package\'s own version.",3,null],[3,"Node","","",null,null],[12,"source","","",4,null],[12,"version","","",4,null],[3,"PackageManager","","",null,null],[12,"kind","","",5,null],[12,"source","","",5,null],[12,"version","","",5,null],[3,"List","","",null,null],[12,"subcommand","","The tool to lookup - `all`, `node`, `yarn`, or the name of…",6,null],[12,"format","","Specify the output format.",6,null],[12,"current","","Show the currently-active tool(s).",6,null],[12,"default","","Show your default tool(s).",6,null],[4,"Format","","",null,null],[13,"Human","","",7,null],[13,"Plain","","",7,null],[4,"Source","","The source of a given item, from the perspective of a user.",null,null],[13,"Project","","The item is from a project. The wrapped `PathBuf` is the…",8,null],[13,"Default","","The item is the user\'s default.",8,null],[13,"None","","The item is one that has been fetched but is not installed…",8,null],[4,"Package","","",null,null],[13,"Default","","",9,null],[12,"details","volta::command::list::Package","",10,null],[12,"node","","The version of Node the package is installed against.",10,null],[12,"tools","","The names of the tools associated with the package.",10,null],[13,"Project","volta::command::list","",9,null],[12,"name","volta::command::list::Package","",11,null],[12,"tools","","The names of the tools associated with the package.",11,null],[12,"path","","",11,null],[13,"Fetched","volta::command::list","",9,null],[4,"PackageManagerKind","","",null,null],[13,"Npm","","",12,null],[13,"Yarn","","",12,null],[4,"Filter","","How (if at all) should the list query be narrowed?",null,null],[13,"Current","","Display only the currently active tool(s).",13,null],[13,"Default","","Show only the user\'s default tool(s).",13,null],[13,"None","","Do not filter at all. Show all tool(s) matching the query.",13,null],[4,"Subcommand","","Which tool should we look up?",null,null],[13,"All","","Show every item in the toolchain.",14,null],[13,"Node","","Show locally cached Node versions.",14,null],[13,"Npm","","Show locally cached npm versions.",14,null],[13,"Yarn","","Show locally cached Yarn versions.",14,null],[13,"PackageOrTool","","Show locally cached versions of a package or a package…",14,null],[12,"name","volta::command::list::Subcommand","",15,null],[0,"human","volta::command::list","Define the \\\"human\\\" format style for list commands.",null,null],[3,"WRAPPER","volta::command::list::human","",null,null],[12,"__private_field","","",16,null],[5,"format","","",null,[[["toolchain",4]],[["option",4],["string",3]]]],[5,"display_active","","Format the output for `Toolchain::Active`.",null,[[["option",4]],["string",3]]],[5,"display_all","","Format the output for `Toolchain::All`.",null,[[],["string",3]]],[5,"display_node","","Format a set of `Toolchain::Node`s.",null,[[],["string",3]]],[5,"display_npms","","Format a set of `Toolchain::PackageManager`s for `volta…",null,[[],["string",3]]],[5,"display_package_managers","","Format a set of `Toolchain::PackageManager`s.",null,[[["packagemanagerkind",4]],["string",3]]],[5,"display_packages","","Format a set of `Toolchain::Package`s and their associated…",null,[[],["string",3]]],[5,"display_tool","","Format a single `Toolchain::Tool` with associated…",null,[[],["string",3]]],[5,"format_tool_list","","Format a list of `Toolchain::Package`s without detail…",null,[[],["string",3]]],[5,"format_tool","","Format a single `Toolchain::Package` without detail…",null,[[["package",4]],["string",3]]],[5,"format_runtime_list","","format a list of `Toolchain::Node`s.",null,[[],["string",3]]],[5,"format_runtime","","format a single version of `Toolchain::Node`.",null,[[["node",3]],["string",3]]],[5,"format_package_manager_list_condensed","","format a list of `Toolchain::PackageManager`s in condensed…",null,[[],["string",3]]],[5,"format_package_manager_list_verbose","","format a list of `Toolchain::PackageManager`s in verbose…",null,[[],["string",3]]],[5,"format_package_manager","","format a single `Toolchain::PackageManager`.",null,[[["packagemanager",3]],["string",3]]],[5,"format_package_manager_kind","","format the title for a kind of package manager",null,[[["packagemanagerkind",4]],["string",3]]],[5,"format_package_list","","format a list of `Toolchain::Package`s and their…",null,[[],["string",3]]],[5,"format_package","","Format a single `Toolchain::Package` and its associated…",null,[[["package",4]],["string",3]]],[5,"list_package_source","","List a the source from a `Toolchain::Package`.",null,[[["package",4]],["string",3]]],[7,"INDENTATION","","",null,null],[7,"NO_RUNTIME","","",null,null],[0,"plain","volta::command::list","Define the \\\"plain\\\" format style for list commands.",null,null],[5,"format","volta::command::list::plain","",null,[[["toolchain",4]],[["option",4],["string",3]]]],[5,"describe_runtimes","","",null,[[],[["option",4],["string",3]]]],[5,"describe_package_managers","","",null,[[],[["option",4],["string",3]]]],[5,"describe_packages","","",null,[[],[["option",4],["string",3]]]],[5,"describe_tool_set","","",null,[[],["string",3]]],[5,"display_node","","",null,[[["version",3],["source",4]],["string",3]]],[5,"display_package_manager","","",null,[[["packagemanager",3]],["string",3]]],[5,"package_source","","",null,[[["package",4]],["string",3]]],[5,"display_package","","",null,[[["package",4]],["string",3]]],[5,"display_tool","","",null,[[["package",4]],[["option",4],["string",3]]]],[0,"toolchain","volta::command::list","",null,null],[4,"Toolchain","volta::command::list::toolchain","",null,null],[13,"Node","","",17,null],[13,"PackageManagers","","",17,null],[12,"kind","volta::command::list::toolchain::Toolchain","",18,null],[12,"managers","","",18,null],[13,"Packages","volta::command::list::toolchain","",17,null],[13,"Tool","","",17,null],[12,"name","volta::command::list::toolchain::Toolchain","",19,null],[12,"host_packages","","",19,null],[13,"Active","volta::command::list::toolchain","",17,null],[12,"runtime","volta::command::list::toolchain::Toolchain","",20,null],[12,"package_managers","","",20,null],[12,"packages","","",20,null],[13,"All","volta::command::list::toolchain","",17,null],[12,"runtimes","volta::command::list::toolchain::Toolchain","",21,null],[12,"package_managers","","",21,null],[12,"packages","","",21,null],[4,"Lookup","volta::command::list::toolchain","Lightweight rule for which item to get the `Source` for.",null,null],[13,"Runtime","","Look up the Node runtime",22,null],[13,"Npm","","Look up the npm package manager",22,null],[13,"Yarn","","Look up the Yarn package manager",22,null],[5,"tool_source","","Look up the `Source` for a tool with a given name.",null,[[["project",3],["option",4]],[["source",4],["fallible",6]]]],[11,"version_from_spec","","",22,[[]]],[11,"version_source","","",22,[[["project",3],["option",4],["platformspec",3],["version",3],["option",4]],["source",4]]],[11,"active_tool","","Determine the `Source` for a given kind of tool (`Lookup`).",22,[[["project",3],["option",4],["platformspec",3],["option",4]],["option",4]]],[11,"active","","",17,[[["project",3],["option",4],["platformspec",3],["option",4]],[["fallible",6],["toolchain",4]]]],[11,"all","","",17,[[["project",3],["option",4],["platformspec",3],["option",4]],[["fallible",6],["toolchain",4]]]],[11,"node","","",17,[[["project",3],["option",4],["platformspec",3],["option",4],["filter",4]],[["fallible",6],["toolchain",4]]]],[11,"npm","","",17,[[["project",3],["option",4],["platformspec",3],["option",4],["filter",4]],[["fallible",6],["toolchain",4]]]],[11,"yarn","","",17,[[["project",3],["option",4],["platformspec",3],["option",4],["filter",4]],[["fallible",6],["toolchain",4]]]],[11,"package_or_tool","","",17,[[["project",3],["option",4],["filter",4]],[["fallible",6],["toolchain",4]]]],[11,"allowed_with","volta::command::list","",8,[[["filter",4]]]],[11,"new","","",9,[[["packageconfig",3],["source",4]],["package",4]]],[11,"from_inventory_and_project","","",9,[[["project",3],["option",4]],[["vec",3],["fallible",6]]]],[11,"source","","",9,[[["project",3],["option",4]],["source",4]]],[11,"output_format","","",6,[[],["format",4]]],[11,"subcommand","","",6,[[],[["option",4],["subcommand",4]]]],[0,"pin","volta::command","",null,null],[3,"Pin","volta::command::pin","",null,null],[12,"tools","","Tools to pin, like `node@lts` or `yarn@^1.14`.",23,null],[0,"run","volta::command","",null,null],[3,"Run","volta::command::run","",null,null],[12,"node","","Set the custom Node version",24,null],[12,"npm","","Set the custom npm version",24,null],[12,"bundled_npm","","Forces npm to be the version bundled with Node",24,null],[12,"yarn","","Set the custom Yarn version",24,null],[12,"no_yarn","","Disables Yarn",24,null],[12,"envs","","Set an environment variable (can be used multiple times)",24,null],[12,"command","","The command to run",24,null],[12,"args","","Arguments to pass to the command",24,null],[11,"parse_platform","","Builds a CliPlatform from the provided cli options",24,[[["session",3]],[["fallible",6],["cliplatform",3]]]],[11,"parse_envs","","Convert the environment variable settings passed to the…",24,[[]]],[0,"setup","volta::command","",null,null],[3,"Setup","volta::command::setup","",null,null],[0,"os","","",null,null],[5,"setup_environment","volta::command::setup::os","",null,[[],["fallible",6]]],[5,"determine_profiles","","Returns a list of profile files to modify / create.",null,[[],[["vec",3],["fallible",6]]]],[5,"add_zsh_profile","","Add zsh profile script, if necessary",null,[[["vec",3],["path",3]]]],[5,"add_bash_profiles","","Add bash profile scripts, if necessary",null,[[["vec",3],["path",3]]]],[5,"add_fish_profile","","Add fish profile scripts, if necessary",null,[[["vec",3],["path",3]]]],[5,"read_profile_without_volta","","",null,[[["path",3]],[["option",4],["string",3]]]],[5,"format_home","","",null,[[["path",3]],["string",3]]],[5,"write_profile_sh","","",null,[[["string",3],["path",3]],["result",6]]],[5,"write_profile_fish","","",null,[[["string",3],["path",3]],["result",6]]],[0,"uninstall","volta::command","",null,null],[3,"Uninstall","volta::command::uninstall","",null,null],[12,"tool","","The tool to uninstall, e.g. `node`, `npm`, `yarn`, or ",25,null],[0,"use","volta::command","",null,null],[3,"Use","volta::command::use","",null,null],[12,"anything","","",26,null],[17,"USAGE","","",null,null],[17,"ADVICE","","",null,null],[0,"which","volta::command","",null,null],[3,"Which","volta::command::which","",null,null],[12,"binary","","The binary to find, e.g. `node` or `npm`",27,null],[8,"Command","volta::command","A Volta command.",null,null],[10,"run","","Executes the command. Returns `Ok(true)` if the process…",28,[[["session",3]],[["exitcode",4],["fallible",6]]]],[0,"cli","volta","",null,null],[3,"Volta","volta::cli","",null,null],[12,"command","","",29,null],[12,"verbose","","",29,null],[12,"quiet","","",29,null],[12,"version","","",29,null],[4,"Subcommand","","",null,null],[13,"Fetch","","Fetches a tool to the local machine",30,null],[13,"Install","","Installs a tool in your toolchain",30,null],[13,"Uninstall","","Uninstalls a tool from your toolchain",30,null],[13,"Pin","","Pins your project\'s runtime or package manager",30,null],[13,"List","","Displays the current toolchain",30,null],[13,"Completions","","Generates Volta completions",30,null],[13,"Which","","Locates the actual binary that will be called by Volta",30,null],[13,"Use","","",30,null],[13,"Setup","","Enables Volta for the current user / shell",30,null],[13,"Run","","Run a command with custom Node, npm, and/or Yarn versions",30,null],[11,"run","","",29,[[["session",3]],[["exitcode",4],["fallible",6]]]],[11,"run","","",30,[[["session",3]],[["exitcode",4],["fallible",6]]]],[0,"common","volta","",null,null],[4,"Error","volta::common","",null,null],[13,"Volta","","",31,null],[13,"Tool","","",31,null],[5,"ensure_layout","","",null,[[],[["result",4],["error",4]]]],[8,"IntoResult","","",null,null],[10,"into_result","","",32,[[],[["result",4],["error",4]]]],[11,"from","volta::command::completions","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","volta::command::fetch","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","volta::command::install","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","volta::command::list","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"equivalent","","",12,[[]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","volta::command::list::human","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","volta::command::list::toolchain","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","volta::command::pin","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","volta::command::run","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","volta::command::setup","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","volta::command::uninstall","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","volta::command::use","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","volta::command::which","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","volta::cli","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","volta::common","",31,[[]]],[11,"into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"run","volta::command::completions","",0,[[["session",3]],[["exitcode",4],["fallible",6]]]],[11,"run","volta::command::fetch","",1,[[["session",3]],[["exitcode",4],["fallible",6]]]],[11,"run","volta::command::install","",2,[[["session",3]],[["exitcode",4],["fallible",6]]]],[11,"run","volta::command::list","",6,[[["session",3]],[["exitcode",4],["fallible",6]]]],[11,"run","volta::command::pin","",23,[[["session",3]],[["exitcode",4],["fallible",6]]]],[11,"run","volta::command::run","",24,[[["session",3]],[["exitcode",4],["fallible",6]]]],[11,"run","volta::command::setup","",33,[[["session",3]],[["exitcode",4],["fallible",6]]]],[11,"run","volta::command::uninstall","",25,[[["session",3]],[["exitcode",4],["fallible",6]]]],[11,"run","volta::command::use","",26,[[["session",3]],[["exitcode",4],["fallible",6]]]],[11,"run","volta::command::which","",27,[[["session",3]],[["exitcode",4],["fallible",6]]]],[11,"from","volta::command::list","",14,[[]]],[11,"clone","","",7,[[],["format",4]]],[11,"clone","","",8,[[],["source",4]]],[11,"clone","","",4,[[],["node",3]]],[11,"clone","","",12,[[],["packagemanagerkind",4]]],[11,"clone","","",5,[[],["packagemanager",3]]],[11,"cmp","","",12,[[["packagemanagerkind",4]],["ordering",4]]],[11,"eq","","",7,[[["format",4]]]],[11,"eq","","",8,[[["source",4]]]],[11,"ne","","",8,[[["source",4]]]],[11,"eq","","",12,[[["packagemanagerkind",4]]]],[11,"partial_cmp","","",12,[[["packagemanagerkind",4]],[["option",4],["ordering",4]]]],[11,"deref","volta::command::list::human","",16,[[],["wrapper",3]]],[11,"fmt","volta::command::completions","",0,[[["formatter",3]],["result",6]]],[11,"fmt","volta::command::list","",8,[[["formatter",3]],["result",6]]],[11,"fmt","volta::command::run","",24,[[["formatter",3]],["result",6]]],[11,"fmt","volta::command::list","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"from_str","","",7,[[],["result",4]]],[11,"clap","volta::command::completions","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"clap","volta::command::fetch","",1,[[],["app",3]]],[11,"from_clap","","",1,[[["argmatches",3]]]],[11,"clap","volta::command::install","",2,[[],["app",3]]],[11,"from_clap","","",2,[[["argmatches",3]]]],[11,"clap","volta::command::list","",6,[[],["app",3]]],[11,"from_clap","","",6,[[["argmatches",3]]]],[11,"clap","volta::command::pin","",23,[[],["app",3]]],[11,"from_clap","","",23,[[["argmatches",3]]]],[11,"clap","volta::command::run","",24,[[],["app",3]]],[11,"from_clap","","",24,[[["argmatches",3]]]],[11,"clap","volta::command::setup","",33,[[],["app",3]]],[11,"from_clap","","",33,[[["argmatches",3]]]],[11,"clap","volta::command::uninstall","",25,[[],["app",3]]],[11,"from_clap","","",25,[[["argmatches",3]]]],[11,"clap","volta::command::use","",26,[[],["app",3]]],[11,"from_clap","","",26,[[["argmatches",3]]]],[11,"clap","volta::command::which","",27,[[],["app",3]]],[11,"from_clap","","",27,[[["argmatches",3]]]],[11,"clap","volta::cli","",29,[[],["app",3]]],[11,"from_clap","","",29,[[["argmatches",3]]]],[11,"clap","","",30,[[],["app",3]]],[11,"from_clap","","",30,[[["argmatches",3]]]],[11,"initialize","volta::command::list::human","",16,[[]]]],"p":[[3,"Completions"],[3,"Fetch"],[3,"Install"],[3,"PackageDetails"],[3,"Node"],[3,"PackageManager"],[3,"List"],[4,"Format"],[4,"Source"],[4,"Package"],[13,"Default"],[13,"Project"],[4,"PackageManagerKind"],[4,"Filter"],[4,"Subcommand"],[13,"PackageOrTool"],[3,"WRAPPER"],[4,"Toolchain"],[13,"PackageManagers"],[13,"Tool"],[13,"Active"],[13,"All"],[4,"Lookup"],[3,"Pin"],[3,"Run"],[3,"Uninstall"],[3,"Use"],[3,"Which"],[8,"Command"],[3,"Volta"],[4,"Subcommand"],[4,"Error"],[8,"IntoResult"],[3,"Setup"]]},\
"volta_core":{"doc":"The main implementation crate for the core of Volta.","i":[[0,"command","volta_core","",null,null],[5,"create_command","volta_core::command","",null,[[],["command",3]]],[0,"error","volta_core","",null,null],[3,"VoltaError","volta_core::error","Error type for Volta",null,null],[12,"inner","","",0,null],[3,"Inner","","",null,null],[12,"kind","","",1,null],[12,"source","","",1,null],[4,"ErrorKind","","",null,null],[13,"BinaryAlreadyInstalled","","Thrown when package tries to install a binary that is…",2,null],[12,"bin_name","volta_core::error::ErrorKind","",3,null],[12,"existing_package","","",3,null],[12,"new_package","","",3,null],[13,"BinaryExecError","volta_core::error","Thrown when executing an external binary fails",2,null],[13,"BinaryNotFound","","Thrown when a binary could not be found in the local…",2,null],[12,"name","volta_core::error::ErrorKind","",4,null],[13,"BuildPathError","volta_core::error","Thrown when building the virtual environment path fails",2,null],[13,"BypassError","","Thrown when unable to launch a command with VOLTA_BYPASS set",2,null],[12,"command","volta_core::error::ErrorKind","",5,null],[13,"CannotPinPackage","volta_core::error","Thrown when a user tries to `volta pin` something other…",2,null],[12,"package","volta_core::error::ErrorKind","",6,null],[13,"CompletionsOutFileError","volta_core::error","Thrown when the Completions out-dir is not a directory",2,null],[12,"path","volta_core::error::ErrorKind","",7,null],[13,"ContainingDirError","volta_core::error","Thrown when the containing directory could not be determined",2,null],[12,"path","volta_core::error::ErrorKind","",8,null],[13,"CouldNotDetermineTool","volta_core::error","",2,null],[13,"CouldNotStartMigration","","Thrown when unable to start the migration executable",2,null],[13,"CreateDirError","","",2,null],[12,"dir","volta_core::error::ErrorKind","",9,null],[13,"CreateLayoutFileError","volta_core::error","Thrown when unable to create the layout file",2,null],[12,"file","volta_core::error::ErrorKind","",10,null],[13,"CreateTempDirError","volta_core::error","Thrown when creating a temporary directory fails",2,null],[12,"in_dir","volta_core::error::ErrorKind","",11,null],[13,"CreateTempFileError","volta_core::error","Thrown when creating a temporary file fails",2,null],[12,"in_dir","volta_core::error::ErrorKind","",12,null],[13,"CurrentDirError","volta_core::error","",2,null],[13,"DeleteDirectoryError","","Thrown when deleting a directory fails",2,null],[12,"directory","volta_core::error::ErrorKind","",13,null],[13,"DeleteFileError","volta_core::error","Thrown when deleting a file fails",2,null],[12,"file","volta_core::error::ErrorKind","",14,null],[13,"DeprecatedCommandError","volta_core::error","",2,null],[12,"command","volta_core::error::ErrorKind","",15,null],[12,"advice","","",15,null],[13,"DetermineBinaryLoaderError","volta_core::error","Thrown when determining the loader for a binary…",2,null],[12,"bin","volta_core::error::ErrorKind","",16,null],[13,"DownloadToolNetworkError","volta_core::error","",2,null],[12,"tool","volta_core::error::ErrorKind","",17,null],[12,"from_url","","",17,null],[13,"ExecutablePathError","volta_core::error","Thrown when building the path to an executable fails",2,null],[12,"command","volta_core::error::ErrorKind","",18,null],[13,"ExecutablePermissionsError","volta_core::error","Thrown when verifying the file permissions on an…",2,null],[12,"bin","volta_core::error::ErrorKind","",19,null],[13,"ExecuteHookError","volta_core::error","Thrown when unable to execute a hook command",2,null],[12,"command","volta_core::error::ErrorKind","",20,null],[13,"ExtensionCycleError","volta_core::error","Thrown when `volta.extends` keys result in an infinite cycle",2,null],[12,"paths","volta_core::error::ErrorKind","",21,null],[12,"duplicate","","",21,null],[13,"ExtensionPathError","volta_core::error","Thrown when determining the path to an extension manifest…",2,null],[12,"path","volta_core::error::ErrorKind","",22,null],[13,"HookCommandFailed","volta_core::error","Thrown when a hook command returns a non-zero exit code",2,null],[12,"command","volta_core::error::ErrorKind","",23,null],[13,"HookMultipleFieldsSpecified","volta_core::error","Thrown when a hook contains multiple fields (prefix,…",2,null],[13,"HookNoFieldsSpecified","","Thrown when a hook doesn\'t contain any of the known fields…",2,null],[13,"HookPathError","","Thrown when determining the path to a hook fails",2,null],[12,"command","volta_core::error::ErrorKind","",24,null],[13,"InvalidHookCommand","volta_core::error","",2,null],[12,"command","volta_core::error::ErrorKind","",25,null],[13,"InvalidHookOutput","volta_core::error","Thrown when output from a hook command could not be read",2,null],[12,"command","volta_core::error::ErrorKind","",26,null],[13,"InvalidInvocation","volta_core::error","Thrown when a user does e.g. `volta install node 12`…",2,null],[12,"action","volta_core::error::ErrorKind","",27,null],[12,"name","","",27,null],[12,"version","","",27,null],[13,"InvalidToolName","volta_core::error","Thrown when a tool name is invalid per npm\'s rules.",2,null],[12,"name","volta_core::error::ErrorKind","",28,null],[12,"errors","","",28,null],[13,"NoBinPlatform","volta_core::error","Thrown when BinConfig (read from file) does not contain…",2,null],[12,"binary","volta_core::error::ErrorKind","",29,null],[13,"NoBundledNpm","volta_core::error","Thrown when pinning or installing npm@bundled and couldn\'t…",2,null],[12,"command","volta_core::error::ErrorKind","",30,null],[13,"NoCommandLineYarn","volta_core::error","Thrown when Yarn is not set at the command-line",2,null],[13,"NoDefaultNodeVersion","","Thrown when a user tries to install a Yarn or npm version…",2,null],[12,"tool","volta_core::error::ErrorKind","",31,null],[13,"NodeVersionNotFound","volta_core::error","Thrown when there is no Node version matching a requested…",2,null],[12,"matching","volta_core::error::ErrorKind","",32,null],[13,"NoGlobalInstalls","volta_core::error","",2,null],[12,"package","volta_core::error::ErrorKind","",33,null],[13,"NoHomeEnvironmentVar","volta_core::error","",2,null],[13,"NoInstallDir","","Thrown when the install dir could not be determined",2,null],[13,"NoLocalDataDir","","",2,null],[13,"NoPackageExecutables","","Thrown when a user tries to install or fetch a package…",2,null],[13,"NoPinnedNodeVersion","","Thrown when a user tries to pin a Yarn or npm version…",2,null],[12,"tool","volta_core::error::ErrorKind","",34,null],[13,"NoPlatform","volta_core::error","Thrown when the platform (Node version) could not be…",2,null],[13,"NoProjectNodeInManifest","","Thrown when parsing the project manifest and there is a…",2,null],[13,"NoProjectYarn","","Thrown when Yarn is not set in a project",2,null],[13,"NoShellProfile","","Thrown when no shell profiles could be found",2,null],[12,"env_profile","volta_core::error::ErrorKind","",35,null],[12,"bin_dir","","",35,null],[13,"NotInPackage","volta_core::error","Thrown when the user tries to pin Node or Yarn versions…",2,null],[13,"NoDefaultYarn","","Thrown when default Yarn is not set",2,null],[13,"NoVersionsFound","","",2,null],[13,"NpmPackFetchError","","Thrown when there is an error running `npm pack`",2,null],[12,"package","volta_core::error::ErrorKind","",36,null],[13,"NpmPackUnpackError","volta_core::error","Thrown when there is issue finding, loading, or unpacking…",2,null],[12,"package","volta_core::error::ErrorKind","",37,null],[13,"NpmVersionNotFound","volta_core::error","Thrown when there is no npm version matching the requested…",2,null],[12,"matching","volta_core::error::ErrorKind","",38,null],[13,"NpmViewMetadataFetchError","volta_core::error","Thrown when there is an error running `npm view`",2,null],[12,"package","volta_core::error::ErrorKind","",39,null],[13,"NpmViewMetadataParseError","volta_core::error","Thrown when there is an error parsing the metadata from…",2,null],[12,"package","volta_core::error::ErrorKind","",40,null],[13,"NpxNotAvailable","volta_core::error","",2,null],[12,"version","volta_core::error::ErrorKind","",41,null],[13,"PackageInstallFailed","volta_core::error","Thrown when package install command is not successful.",2,null],[13,"PackageMetadataFetchError","","Thrown when there is an error fetching package metadata",2,null],[12,"from_url","volta_core::error::ErrorKind","",42,null],[13,"PackageNotFound","volta_core::error","Thrown when a specified package could not be found on the…",2,null],[12,"package","volta_core::error::ErrorKind","",43,null],[13,"PackageParseError","volta_core::error","Thrown when parsing a package manifest fails",2,null],[12,"file","volta_core::error::ErrorKind","",44,null],[13,"PackageReadError","volta_core::error","Thrown when reading a package manifest fails",2,null],[12,"file","volta_core::error::ErrorKind","",45,null],[13,"PackageUnpackError","volta_core::error","Thrown when a package has been unpacked but is not formed…",2,null],[13,"PackageVersionNotFound","","Thrown when there is no package version matching a…",2,null],[12,"name","volta_core::error::ErrorKind","",46,null],[12,"matching","","",46,null],[13,"PackageWriteError","volta_core::error","Thrown when writing a package manifest fails",2,null],[12,"file","volta_core::error::ErrorKind","",47,null],[13,"ParseBinConfigError","volta_core::error","Thrown when unable to parse a bin config file",2,null],[13,"ParseHooksError","","Thrown when unable to parse a hooks.json file",2,null],[12,"file","volta_core::error::ErrorKind","",48,null],[13,"ParseNodeIndexCacheError","volta_core::error","Thrown when unable to parse the node index cache",2,null],[13,"ParseNodeIndexError","","Thrown when unable to parse the node index",2,null],[12,"from_url","volta_core::error::ErrorKind","",49,null],[13,"ParseNodeIndexExpiryError","volta_core::error","Thrown when unable to parse the node index cache expiration",2,null],[13,"ParseNpmManifestError","","Thrown when unable to parse the npm manifest file from a…",2,null],[13,"ParsePackageConfigError","","Thrown when unable to parse a package configuration",2,null],[13,"ParsePackageMetadataError","","Thrown when unable to parse the metadata for a package",2,null],[12,"from_url","volta_core::error::ErrorKind","",50,null],[13,"ParsePlatformError","volta_core::error","Thrown when unable to parse the platform.json file",2,null],[13,"ParseToolSpecError","","Thrown when unable to parse a tool spec…",2,null],[12,"tool_spec","volta_core::error::ErrorKind","",51,null],[13,"PersistInventoryError","volta_core::error","Thrown when persisting an archive to the inventory fails",2,null],[12,"tool","volta_core::error::ErrorKind","",52,null],[13,"ProjectLocalBinaryExecError","volta_core::error","Thrown when executing a project-local binary fails",2,null],[12,"command","volta_core::error::ErrorKind","",53,null],[13,"ProjectLocalBinaryNotFound","volta_core::error","Thrown when a project-local binary could not be found",2,null],[12,"command","volta_core::error::ErrorKind","",54,null],[13,"PublishHookBothUrlAndBin","volta_core::error","Thrown when a publish hook contains both the url and bin…",2,null],[13,"PublishHookNeitherUrlNorBin","","Thrown when a publish hook contains neither url nor bin…",2,null],[13,"ReadBinConfigDirError","","Thrown when there was an error reading the user bin…",2,null],[12,"dir","volta_core::error::ErrorKind","",55,null],[13,"ReadBinConfigError","volta_core::error","Thrown when there was an error reading the config for a…",2,null],[12,"file","volta_core::error::ErrorKind","",56,null],[13,"ReadDefaultNpmError","volta_core::error","Thrown when unable to read the default npm version file",2,null],[12,"file","volta_core::error::ErrorKind","",57,null],[13,"ReadDirError","volta_core::error","Thrown when unable to read the contents of a directory",2,null],[12,"dir","volta_core::error::ErrorKind","",58,null],[13,"ReadHooksError","volta_core::error","Thrown when there was an error opening a hooks.json file",2,null],[12,"file","volta_core::error::ErrorKind","",59,null],[13,"ReadNodeIndexCacheError","volta_core::error","Thrown when there was an error reading the Node Index Cache",2,null],[12,"file","volta_core::error::ErrorKind","",60,null],[13,"ReadNodeIndexExpiryError","volta_core::error","Thrown when there was an error reading the Node Index…",2,null],[12,"file","volta_core::error::ErrorKind","",61,null],[13,"ReadNpmManifestError","volta_core::error","Thrown when there was an error reading the npm manifest file",2,null],[13,"ReadPackageConfigError","","Thrown when there was an error reading a package…",2,null],[12,"file","volta_core::error::ErrorKind","",62,null],[13,"ReadPlatformError","volta_core::error","Thrown when there was an error opening the user platform…",2,null],[12,"file","volta_core::error::ErrorKind","",63,null],[13,"RegistryFetchError","volta_core::error","Thrown when the public registry for Node or Yarn could not…",2,null],[12,"tool","volta_core::error::ErrorKind","",64,null],[12,"from_url","","",64,null],[13,"RunShimDirectly","volta_core::error","Thrown when the shim binary is called directly, not…",2,null],[13,"SetupToolImageError","","Thrown when there was an error copying an unpacked tool to…",2,null],[12,"tool","volta_core::error::ErrorKind","",65,null],[12,"version","","",65,null],[12,"dir","","",65,null],[13,"ShimCreateError","volta_core::error","Thrown when Volta is unable to create a shim",2,null],[12,"name","volta_core::error::ErrorKind","",66,null],[13,"ShimRemoveError","volta_core::error","Thrown when Volta is unable to remove a shim",2,null],[12,"name","volta_core::error::ErrorKind","",67,null],[13,"StringifyBinConfigError","volta_core::error","Thrown when serializnig a bin config to JSON fails",2,null],[13,"StringifyPackageConfigError","","Thrown when serializnig a package config to JSON fails",2,null],[13,"StringifyPlatformError","","Thrown when serializing the platform to JSON fails",2,null],[13,"StringifyToolchainError","","Thrown when serializing the toolchain to JSON fails",2,null],[13,"Unimplemented","","Thrown when a given feature has not yet been implemented",2,null],[12,"feature","volta_core::error::ErrorKind","",68,null],[13,"UnpackArchiveError","volta_core::error","Thrown when unpacking an archive (tarball or zip) fails",2,null],[12,"tool","volta_core::error::ErrorKind","",69,null],[12,"version","","",69,null],[13,"UnrecognizedShell","volta_core::error","Thrown when the shell name specified in the Volta…",2,null],[12,"name","volta_core::error::ErrorKind","",70,null],[13,"UnspecifiedPostscript","volta_core::error","Thrown when the postscript file was not specified in the…",2,null],[13,"UnspecifiedShell","","Thrown when the shell name was not specified in the Volta…",2,null],[13,"VersionParseError","","",2,null],[12,"version","volta_core::error::ErrorKind","",71,null],[13,"WriteBinConfigError","volta_core::error","Thrown when there was an error writing a bin config file",2,null],[12,"file","volta_core::error::ErrorKind","",72,null],[13,"WriteDefaultNpmError","volta_core::error","Thrown when there was an error writing the default npm to…",2,null],[12,"file","volta_core::error::ErrorKind","",73,null],[13,"WriteLauncherError","volta_core::error","Thrown when there was an error writing the npm launcher",2,null],[12,"tool","volta_core::error::ErrorKind","",74,null],[13,"WriteNodeIndexCacheError","volta_core::error","Thrown when there was an error writing the node index cache",2,null],[12,"file","volta_core::error::ErrorKind","",75,null],[13,"WriteNodeIndexExpiryError","volta_core::error","Thrown when there was an error writing the node index…",2,null],[12,"file","volta_core::error::ErrorKind","",76,null],[13,"WritePackageConfigError","volta_core::error","Thrown when there was an error writing a package config",2,null],[12,"file","volta_core::error::ErrorKind","",77,null],[13,"WritePackageShasumError","volta_core::error","Thrown when there was an error writing the shasum for a…",2,null],[12,"package","volta_core::error::ErrorKind","",78,null],[12,"version","","",78,null],[12,"file","","",78,null],[13,"WritePlatformError","volta_core::error","Thrown when writing the platform.json file fails",2,null],[12,"file","volta_core::error::ErrorKind","",79,null],[13,"YarnLatestFetchError","volta_core::error","Thrown when there is an error fetching the latest version…",2,null],[12,"from_url","volta_core::error::ErrorKind","",80,null],[13,"YarnVersionNotFound","volta_core::error","Thrown when there is no Yarn version matching a requested…",2,null],[12,"matching","volta_core::error::ErrorKind","",81,null],[4,"ExitCode","volta_core::error","Exit codes supported by Volta Errors",null,null],[13,"Success","","No error occurred.",82,null],[13,"UnknownError","","An unknown error occurred.",82,null],[13,"InvalidArguments","","An invalid combination of command-line arguments was…",82,null],[13,"NoVersionMatch","","No match could be found for the requested version string.",82,null],[13,"NetworkError","","A network error occurred.",82,null],[13,"EnvironmentError","","A required environment variable was unset or invalid.",82,null],[13,"FileSystemError","","A file could not be read or written.",82,null],[13,"ConfigurationError","","Package configuration is missing or incorrect.",82,null],[13,"NotYetImplemented","","The command or feature is not yet implemented.",82,null],[13,"ExecutionFailure","","The requested executable could not be run.",82,null],[13,"ExecutableNotFound","","The requested executable is not available.",82,null],[5,"report_error","","Report an error, both to the console and to error logs",null,[[["voltaerror",3]]]],[0,"kind","","",null,null],[4,"ErrorKind","volta_core::error::kind","",null,null],[13,"BinaryAlreadyInstalled","","Thrown when package tries to install a binary that is…",2,null],[12,"bin_name","volta_core::error::kind::ErrorKind","",3,null],[12,"existing_package","","",3,null],[12,"new_package","","",3,null],[13,"BinaryExecError","volta_core::error::kind","Thrown when executing an external binary fails",2,null],[13,"BinaryNotFound","","Thrown when a binary could not be found in the local…",2,null],[12,"name","volta_core::error::kind::ErrorKind","",4,null],[13,"BuildPathError","volta_core::error::kind","Thrown when building the virtual environment path fails",2,null],[13,"BypassError","","Thrown when unable to launch a command with VOLTA_BYPASS set",2,null],[12,"command","volta_core::error::kind::ErrorKind","",5,null],[13,"CannotPinPackage","volta_core::error::kind","Thrown when a user tries to `volta pin` something other…",2,null],[12,"package","volta_core::error::kind::ErrorKind","",6,null],[13,"CompletionsOutFileError","volta_core::error::kind","Thrown when the Completions out-dir is not a directory",2,null],[12,"path","volta_core::error::kind::ErrorKind","",7,null],[13,"ContainingDirError","volta_core::error::kind","Thrown when the containing directory could not be determined",2,null],[12,"path","volta_core::error::kind::ErrorKind","",8,null],[13,"CouldNotDetermineTool","volta_core::error::kind","",2,null],[13,"CouldNotStartMigration","","Thrown when unable to start the migration executable",2,null],[13,"CreateDirError","","",2,null],[12,"dir","volta_core::error::kind::ErrorKind","",9,null],[13,"CreateLayoutFileError","volta_core::error::kind","Thrown when unable to create the layout file",2,null],[12,"file","volta_core::error::kind::ErrorKind","",10,null],[13,"CreateTempDirError","volta_core::error::kind","Thrown when creating a temporary directory fails",2,null],[12,"in_dir","volta_core::error::kind::ErrorKind","",11,null],[13,"CreateTempFileError","volta_core::error::kind","Thrown when creating a temporary file fails",2,null],[12,"in_dir","volta_core::error::kind::ErrorKind","",12,null],[13,"CurrentDirError","volta_core::error::kind","",2,null],[13,"DeleteDirectoryError","","Thrown when deleting a directory fails",2,null],[12,"directory","volta_core::error::kind::ErrorKind","",13,null],[13,"DeleteFileError","volta_core::error::kind","Thrown when deleting a file fails",2,null],[12,"file","volta_core::error::kind::ErrorKind","",14,null],[13,"DeprecatedCommandError","volta_core::error::kind","",2,null],[12,"command","volta_core::error::kind::ErrorKind","",15,null],[12,"advice","","",15,null],[13,"DetermineBinaryLoaderError","volta_core::error::kind","Thrown when determining the loader for a binary…",2,null],[12,"bin","volta_core::error::kind::ErrorKind","",16,null],[13,"DownloadToolNetworkError","volta_core::error::kind","",2,null],[12,"tool","volta_core::error::kind::ErrorKind","",17,null],[12,"from_url","","",17,null],[13,"ExecutablePathError","volta_core::error::kind","Thrown when building the path to an executable fails",2,null],[12,"command","volta_core::error::kind::ErrorKind","",18,null],[13,"ExecutablePermissionsError","volta_core::error::kind","Thrown when verifying the file permissions on an…",2,null],[12,"bin","volta_core::error::kind::ErrorKind","",19,null],[13,"ExecuteHookError","volta_core::error::kind","Thrown when unable to execute a hook command",2,null],[12,"command","volta_core::error::kind::ErrorKind","",20,null],[13,"ExtensionCycleError","volta_core::error::kind","Thrown when `volta.extends` keys result in an infinite cycle",2,null],[12,"paths","volta_core::error::kind::ErrorKind","",21,null],[12,"duplicate","","",21,null],[13,"ExtensionPathError","volta_core::error::kind","Thrown when determining the path to an extension manifest…",2,null],[12,"path","volta_core::error::kind::ErrorKind","",22,null],[13,"HookCommandFailed","volta_core::error::kind","Thrown when a hook command returns a non-zero exit code",2,null],[12,"command","volta_core::error::kind::ErrorKind","",23,null],[13,"HookMultipleFieldsSpecified","volta_core::error::kind","Thrown when a hook contains multiple fields (prefix,…",2,null],[13,"HookNoFieldsSpecified","","Thrown when a hook doesn\'t contain any of the known fields…",2,null],[13,"HookPathError","","Thrown when determining the path to a hook fails",2,null],[12,"command","volta_core::error::kind::ErrorKind","",24,null],[13,"InvalidHookCommand","volta_core::error::kind","",2,null],[12,"command","volta_core::error::kind::ErrorKind","",25,null],[13,"InvalidHookOutput","volta_core::error::kind","Thrown when output from a hook command could not be read",2,null],[12,"command","volta_core::error::kind::ErrorKind","",26,null],[13,"InvalidInvocation","volta_core::error::kind","Thrown when a user does e.g. `volta install node 12`…",2,null],[12,"action","volta_core::error::kind::ErrorKind","",27,null],[12,"name","","",27,null],[12,"version","","",27,null],[13,"InvalidToolName","volta_core::error::kind","Thrown when a tool name is invalid per npm\'s rules.",2,null],[12,"name","volta_core::error::kind::ErrorKind","",28,null],[12,"errors","","",28,null],[13,"NoBinPlatform","volta_core::error::kind","Thrown when BinConfig (read from file) does not contain…",2,null],[12,"binary","volta_core::error::kind::ErrorKind","",29,null],[13,"NoBundledNpm","volta_core::error::kind","Thrown when pinning or installing npm@bundled and couldn\'t…",2,null],[12,"command","volta_core::error::kind::ErrorKind","",30,null],[13,"NoCommandLineYarn","volta_core::error::kind","Thrown when Yarn is not set at the command-line",2,null],[13,"NoDefaultNodeVersion","","Thrown when a user tries to install a Yarn or npm version…",2,null],[12,"tool","volta_core::error::kind::ErrorKind","",31,null],[13,"NodeVersionNotFound","volta_core::error::kind","Thrown when there is no Node version matching a requested…",2,null],[12,"matching","volta_core::error::kind::ErrorKind","",32,null],[13,"NoGlobalInstalls","volta_core::error::kind","",2,null],[12,"package","volta_core::error::kind::ErrorKind","",33,null],[13,"NoHomeEnvironmentVar","volta_core::error::kind","",2,null],[13,"NoInstallDir","","Thrown when the install dir could not be determined",2,null],[13,"NoLocalDataDir","","",2,null],[13,"NoPackageExecutables","","Thrown when a user tries to install or fetch a package…",2,null],[13,"NoPinnedNodeVersion","","Thrown when a user tries to pin a Yarn or npm version…",2,null],[12,"tool","volta_core::error::kind::ErrorKind","",34,null],[13,"NoPlatform","volta_core::error::kind","Thrown when the platform (Node version) could not be…",2,null],[13,"NoProjectNodeInManifest","","Thrown when parsing the project manifest and there is a…",2,null],[13,"NoProjectYarn","","Thrown when Yarn is not set in a project",2,null],[13,"NoShellProfile","","Thrown when no shell profiles could be found",2,null],[12,"env_profile","volta_core::error::kind::ErrorKind","",35,null],[12,"bin_dir","","",35,null],[13,"NotInPackage","volta_core::error::kind","Thrown when the user tries to pin Node or Yarn versions…",2,null],[13,"NoDefaultYarn","","Thrown when default Yarn is not set",2,null],[13,"NoVersionsFound","","",2,null],[13,"NpmPackFetchError","","Thrown when there is an error running `npm pack`",2,null],[12,"package","volta_core::error::kind::ErrorKind","",36,null],[13,"NpmPackUnpackError","volta_core::error::kind","Thrown when there is issue finding, loading, or unpacking…",2,null],[12,"package","volta_core::error::kind::ErrorKind","",37,null],[13,"NpmVersionNotFound","volta_core::error::kind","Thrown when there is no npm version matching the requested…",2,null],[12,"matching","volta_core::error::kind::ErrorKind","",38,null],[13,"NpmViewMetadataFetchError","volta_core::error::kind","Thrown when there is an error running `npm view`",2,null],[12,"package","volta_core::error::kind::ErrorKind","",39,null],[13,"NpmViewMetadataParseError","volta_core::error::kind","Thrown when there is an error parsing the metadata from…",2,null],[12,"package","volta_core::error::kind::ErrorKind","",40,null],[13,"NpxNotAvailable","volta_core::error::kind","",2,null],[12,"version","volta_core::error::kind::ErrorKind","",41,null],[13,"PackageInstallFailed","volta_core::error::kind","Thrown when package install command is not successful.",2,null],[13,"PackageMetadataFetchError","","Thrown when there is an error fetching package metadata",2,null],[12,"from_url","volta_core::error::kind::ErrorKind","",42,null],[13,"PackageNotFound","volta_core::error::kind","Thrown when a specified package could not be found on the…",2,null],[12,"package","volta_core::error::kind::ErrorKind","",43,null],[13,"PackageParseError","volta_core::error::kind","Thrown when parsing a package manifest fails",2,null],[12,"file","volta_core::error::kind::ErrorKind","",44,null],[13,"PackageReadError","volta_core::error::kind","Thrown when reading a package manifest fails",2,null],[12,"file","volta_core::error::kind::ErrorKind","",45,null],[13,"PackageUnpackError","volta_core::error::kind","Thrown when a package has been unpacked but is not formed…",2,null],[13,"PackageVersionNotFound","","Thrown when there is no package version matching a…",2,null],[12,"name","volta_core::error::kind::ErrorKind","",46,null],[12,"matching","","",46,null],[13,"PackageWriteError","volta_core::error::kind","Thrown when writing a package manifest fails",2,null],[12,"file","volta_core::error::kind::ErrorKind","",47,null],[13,"ParseBinConfigError","volta_core::error::kind","Thrown when unable to parse a bin config file",2,null],[13,"ParseHooksError","","Thrown when unable to parse a hooks.json file",2,null],[12,"file","volta_core::error::kind::ErrorKind","",48,null],[13,"ParseNodeIndexCacheError","volta_core::error::kind","Thrown when unable to parse the node index cache",2,null],[13,"ParseNodeIndexError","","Thrown when unable to parse the node index",2,null],[12,"from_url","volta_core::error::kind::ErrorKind","",49,null],[13,"ParseNodeIndexExpiryError","volta_core::error::kind","Thrown when unable to parse the node index cache expiration",2,null],[13,"ParseNpmManifestError","","Thrown when unable to parse the npm manifest file from a…",2,null],[13,"ParsePackageConfigError","","Thrown when unable to parse a package configuration",2,null],[13,"ParsePackageMetadataError","","Thrown when unable to parse the metadata for a package",2,null],[12,"from_url","volta_core::error::kind::ErrorKind","",50,null],[13,"ParsePlatformError","volta_core::error::kind","Thrown when unable to parse the platform.json file",2,null],[13,"ParseToolSpecError","","Thrown when unable to parse a tool spec…",2,null],[12,"tool_spec","volta_core::error::kind::ErrorKind","",51,null],[13,"PersistInventoryError","volta_core::error::kind","Thrown when persisting an archive to the inventory fails",2,null],[12,"tool","volta_core::error::kind::ErrorKind","",52,null],[13,"ProjectLocalBinaryExecError","volta_core::error::kind","Thrown when executing a project-local binary fails",2,null],[12,"command","volta_core::error::kind::ErrorKind","",53,null],[13,"ProjectLocalBinaryNotFound","volta_core::error::kind","Thrown when a project-local binary could not be found",2,null],[12,"command","volta_core::error::kind::ErrorKind","",54,null],[13,"PublishHookBothUrlAndBin","volta_core::error::kind","Thrown when a publish hook contains both the url and bin…",2,null],[13,"PublishHookNeitherUrlNorBin","","Thrown when a publish hook contains neither url nor bin…",2,null],[13,"ReadBinConfigDirError","","Thrown when there was an error reading the user bin…",2,null],[12,"dir","volta_core::error::kind::ErrorKind","",55,null],[13,"ReadBinConfigError","volta_core::error::kind","Thrown when there was an error reading the config for a…",2,null],[12,"file","volta_core::error::kind::ErrorKind","",56,null],[13,"ReadDefaultNpmError","volta_core::error::kind","Thrown when unable to read the default npm version file",2,null],[12,"file","volta_core::error::kind::ErrorKind","",57,null],[13,"ReadDirError","volta_core::error::kind","Thrown when unable to read the contents of a directory",2,null],[12,"dir","volta_core::error::kind::ErrorKind","",58,null],[13,"ReadHooksError","volta_core::error::kind","Thrown when there was an error opening a hooks.json file",2,null],[12,"file","volta_core::error::kind::ErrorKind","",59,null],[13,"ReadNodeIndexCacheError","volta_core::error::kind","Thrown when there was an error reading the Node Index Cache",2,null],[12,"file","volta_core::error::kind::ErrorKind","",60,null],[13,"ReadNodeIndexExpiryError","volta_core::error::kind","Thrown when there was an error reading the Node Index…",2,null],[12,"file","volta_core::error::kind::ErrorKind","",61,null],[13,"ReadNpmManifestError","volta_core::error::kind","Thrown when there was an error reading the npm manifest file",2,null],[13,"ReadPackageConfigError","","Thrown when there was an error reading a package…",2,null],[12,"file","volta_core::error::kind::ErrorKind","",62,null],[13,"ReadPlatformError","volta_core::error::kind","Thrown when there was an error opening the user platform…",2,null],[12,"file","volta_core::error::kind::ErrorKind","",63,null],[13,"RegistryFetchError","volta_core::error::kind","Thrown when the public registry for Node or Yarn could not…",2,null],[12,"tool","volta_core::error::kind::ErrorKind","",64,null],[12,"from_url","","",64,null],[13,"RunShimDirectly","volta_core::error::kind","Thrown when the shim binary is called directly, not…",2,null],[13,"SetupToolImageError","","Thrown when there was an error copying an unpacked tool to…",2,null],[12,"tool","volta_core::error::kind::ErrorKind","",65,null],[12,"version","","",65,null],[12,"dir","","",65,null],[13,"ShimCreateError","volta_core::error::kind","Thrown when Volta is unable to create a shim",2,null],[12,"name","volta_core::error::kind::ErrorKind","",66,null],[13,"ShimRemoveError","volta_core::error::kind","Thrown when Volta is unable to remove a shim",2,null],[12,"name","volta_core::error::kind::ErrorKind","",67,null],[13,"StringifyBinConfigError","volta_core::error::kind","Thrown when serializnig a bin config to JSON fails",2,null],[13,"StringifyPackageConfigError","","Thrown when serializnig a package config to JSON fails",2,null],[13,"StringifyPlatformError","","Thrown when serializing the platform to JSON fails",2,null],[13,"StringifyToolchainError","","Thrown when serializing the toolchain to JSON fails",2,null],[13,"Unimplemented","","Thrown when a given feature has not yet been implemented",2,null],[12,"feature","volta_core::error::kind::ErrorKind","",68,null],[13,"UnpackArchiveError","volta_core::error::kind","Thrown when unpacking an archive (tarball or zip) fails",2,null],[12,"tool","volta_core::error::kind::ErrorKind","",69,null],[12,"version","","",69,null],[13,"UnrecognizedShell","volta_core::error::kind","Thrown when the shell name specified in the Volta…",2,null],[12,"name","volta_core::error::kind::ErrorKind","",70,null],[13,"UnspecifiedPostscript","volta_core::error::kind","Thrown when the postscript file was not specified in the…",2,null],[13,"UnspecifiedShell","","Thrown when the shell name was not specified in the Volta…",2,null],[13,"VersionParseError","","",2,null],[12,"version","volta_core::error::kind::ErrorKind","",71,null],[13,"WriteBinConfigError","volta_core::error::kind","Thrown when there was an error writing a bin config file",2,null],[12,"file","volta_core::error::kind::ErrorKind","",72,null],[13,"WriteDefaultNpmError","volta_core::error::kind","Thrown when there was an error writing the default npm to…",2,null],[12,"file","volta_core::error::kind::ErrorKind","",73,null],[13,"WriteLauncherError","volta_core::error::kind","Thrown when there was an error writing the npm launcher",2,null],[12,"tool","volta_core::error::kind::ErrorKind","",74,null],[13,"WriteNodeIndexCacheError","volta_core::error::kind","Thrown when there was an error writing the node index cache",2,null],[12,"file","volta_core::error::kind::ErrorKind","",75,null],[13,"WriteNodeIndexExpiryError","volta_core::error::kind","Thrown when there was an error writing the node index…",2,null],[12,"file","volta_core::error::kind::ErrorKind","",76,null],[13,"WritePackageConfigError","volta_core::error::kind","Thrown when there was an error writing a package config",2,null],[12,"file","volta_core::error::kind::ErrorKind","",77,null],[13,"WritePackageShasumError","volta_core::error::kind","Thrown when there was an error writing the shasum for a…",2,null],[12,"package","volta_core::error::kind::ErrorKind","",78,null],[12,"version","","",78,null],[12,"file","","",78,null],[13,"WritePlatformError","volta_core::error::kind","Thrown when writing the platform.json file fails",2,null],[12,"file","volta_core::error::kind::ErrorKind","",79,null],[13,"YarnLatestFetchError","volta_core::error::kind","Thrown when there is an error fetching the latest version…",2,null],[12,"from_url","volta_core::error::kind::ErrorKind","",80,null],[13,"YarnVersionNotFound","volta_core::error::kind","Thrown when there is no Yarn version matching a requested…",2,null],[12,"matching","volta_core::error::kind::ErrorKind","",81,null],[17,"REPORT_BUG_CTA","volta_core::error::kind","",null,null],[17,"PERMISSIONS_CTA","","",null,null],[11,"exit_code","volta_core::error","",2,[[],["exitcode",4]]],[0,"reporter","","",null,null],[5,"report_error","volta_core::error::reporter","Report an error, both to the console and to error logs",null,[[["voltaerror",3]]]],[5,"write_error_log","","Write an error log with all details about the error",null,[[["string",3]],[["pathbuf",3],["box",3],["result",4]]]],[5,"compose_error_details","","",null,[[["voltaerror",3]],[["option",4],["string",3]]]],[5,"collect_arguments","","Combines all the arguments into a single String",null,[[],["string",3]]],[6,"Fallible","volta_core::error","",null,null],[8,"Context","","Trait providing the with_context method to easily convert…",null,null],[10,"with_context","","",83,[[],["fallible",6]]],[11,"exit_code","","The exit code Volta should use when this error stops…",0,[[],["exitcode",4]]],[11,"from_source","","Create a new VoltaError instance including a source error",0,[[["errorkind",4]]]],[11,"kind","","Get a reference to the ErrorKind for this error",0,[[],["errorkind",4]]],[11,"exit","","",82,[[]]],[0,"event","volta_core","Events for the sessions in executables and shims and…",null,null],[3,"Event","volta_core::event","",null,null],[12,"timestamp","","",84,null],[12,"name","","",84,null],[12,"event","","",84,null],[3,"ErrorEnv","","",null,null],[12,"argv","","",85,null],[12,"exec_path","","",85,null],[12,"path","","",85,null],[12,"platform","","",85,null],[12,"platform_version","","",85,null],[3,"EventLog","","",null,null],[12,"events","","",86,null],[4,"EventKind","","",null,null],[13,"Start","","",87,null],[13,"End","","",87,null],[12,"exit_code","volta_core::event::EventKind","",88,null],[13,"Error","volta_core::event","",87,null],[12,"exit_code","volta_core::event::EventKind","",89,null],[12,"error","","",89,null],[12,"env","","",89,null],[13,"ToolEnd","volta_core::event","",87,null],[12,"exit_code","volta_core::event::EventKind","",90,null],[5,"unix_timestamp","volta_core::event","",null,[[]]],[5,"get_error_env","","",null,[[],["errorenv",3]]],[17,"_IMPL_SERIALIZE_FOR_Event","","",null,null],[17,"_IMPL_SERIALIZE_FOR_ErrorEnv","","",null,null],[17,"_IMPL_SERIALIZE_FOR_EventKind","","",null,null],[11,"into_event","","",87,[[["activitykind",4]],["event",3]]],[11,"init","","Constructs a new \'EventLog\'",86,[[]]],[11,"add_event_start","","",86,[[["activitykind",4]]]],[11,"add_event_end","","",86,[[["exitcode",4],["activitykind",4]]]],[11,"add_event_tool_end","","",86,[[["activitykind",4]]]],[11,"add_event_error","","",86,[[["voltaerror",3],["activitykind",4]]]],[11,"add_event","","",86,[[["eventkind",4],["activitykind",4]]]],[11,"publish","","",86,[[["option",4],["publish",4]]]],[0,"fs","volta_core","Provides utilities for operating on the filesystem.",null,null],[5,"touch","volta_core::fs","Opens a file, creating it if it doesn\'t exist",null,[[["path",3]],[["result",6],["file",3]]]],[5,"remove_dir_if_exists","","Removes the target directory, if it exists. If the…",null,[[["asref",8],["path",3]],["fallible",6]]],[5,"remove_file_if_exists","","Removes the target file, if it exists. If the file doesn\'t…",null,[[["asref",8],["path",3]],["fallible",6]]],[5,"ok_if_not_found","","Converts a failure because of file not found into a success.",null,[[["error",3]],["result",6]]],[5,"read_file","","Reads a file, if it exists.",null,[[["asref",8],["path",3]],[["option",4],["result",6]]]],[5,"read_dir_eager","","Reads the full contents of a directory, eagerly extracting…",null,[[["path",3]],["result",6]]],[5,"dir_entry_match","","Reads the contents of a directory and returns a Vec of the…",null,[[["path",3]],[["result",6],["vec",3]]]],[5,"create_staging_file","","Creates a NamedTempFile in the Volta tmp directory",null,[[],[["namedtempfile",3],["fallible",6]]]],[5,"create_staging_dir","","Creates a staging directory in the Volta tmp directory",null,[[],[["fallible",6],["tempdir",3]]]],[5,"symlink_file","","Create a symlink. The `dst` path will be a symbolic link…",null,[[],["result",6]]],[5,"set_executable","","Ensure that a given file has \'executable\' permissions,…",null,[[["path",3]],["result",6]]],[5,"rename","","Rename a file or directory to a new name, retrying if the…",null,[[],["result",6]]],[0,"hook","volta_core","Provides types for working with Volta hooks.",null,null],[3,"LazyHookConfig","volta_core::hook","Lazily loaded Volta hook configuration",null,null],[12,"settings","","",91,null],[3,"HookConfig","","Volta hook configuration",null,null],[12,"node","","",92,null],[12,"npm","","",92,null],[12,"yarn","","",92,null],[12,"package","","",92,null],[12,"events","","",92,null],[3,"ToolHooks","","Volta hooks for an individual tool",null,null],[12,"distro","","The hook for resolving the URL for a distro version",93,null],[12,"latest","","The hook for resolving the URL for the latest version",93,null],[12,"index","","The hook for resolving the Tool Index URL",93,null],[12,"phantom","","",93,null],[3,"EventHooks","","Volta hooks related to events.",null,null],[12,"publish","","The hook for publishing events, if any.",94,null],[4,"Publish","","A hook for publishing Volta events.",null,null],[13,"Url","","Reports an event by sending a POST request to a URL.",95,null],[13,"Bin","","Reports an event by forking a process and sending the…",95,null],[0,"serial","","",null,null],[3,"RawResolveHook","volta_core::hook::serial","",null,null],[12,"prefix","","",96,null],[12,"template","","",96,null],[12,"bin","","",96,null],[3,"RawPublishHook","","",null,null],[12,"url","","",97,null],[12,"bin","","",97,null],[3,"RawHookConfig","","",null,null],[12,"node","","",98,null],[12,"npm","","",98,null],[12,"yarn","","",98,null],[12,"packages","","",98,null],[12,"events","","",98,null],[3,"RawEventHooks","","",null,null],[12,"publish","","",99,null],[3,"RawToolHooks","","",null,null],[12,"distro","","",100,null],[12,"latest","","",100,null],[12,"index","","",100,null],[12,"phantom","","",100,null],[17,"_IMPL_SERIALIZE_FOR_RawResolveHook","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_RawResolveHook","","",null,null],[17,"_IMPL_SERIALIZE_FOR_RawPublishHook","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_RawPublishHook","","",null,null],[17,"_IMPL_SERIALIZE_FOR_RawHookConfig","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_RawHookConfig","","",null,null],[17,"_IMPL_SERIALIZE_FOR_RawEventHooks","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_RawEventHooks","","",null,null],[17,"_IMPL_SERIALIZE_FOR_RawToolHooks","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_RawToolHooks","","",null,null],[11,"into_hook","","",96,[[],["fallible",6]]],[11,"into_distro_hook","","",96,[[["path",3]],[["distrohook",4],["fallible",6]]]],[11,"into_metadata_hook","","",96,[[["path",3]],[["fallible",6],["metadatahook",4]]]],[11,"into_hook_config","","",98,[[["path",3]],[["fallible",6],["hookconfig",3]]]],[11,"into_tool_hooks","","",100,[[["path",3]],[["fallible",6],["toolhooks",3]]]],[0,"tool","volta_core::hook","Types representing Volta Tool Hooks.",null,null],[3,"REL_PATH","volta_core::hook::tool","",null,null],[12,"__private_field","","",101,null],[3,"REL_PATH_PARENT","","",null,null],[12,"__private_field","","",102,null],[4,"DistroHook","","A hook for resolving the distro URL for a given tool version",null,null],[13,"Prefix","","",103,null],[13,"Template","","",103,null],[13,"Bin","","",103,null],[12,"bin","volta_core::hook::tool::DistroHook","",104,null],[12,"base_path","","",104,null],[4,"MetadataHook","volta_core::hook::tool","A hook for resolving the URL for metadata about a tool",null,null],[13,"Prefix","","",105,null],[13,"Template","","",105,null],[13,"Bin","","",105,null],[12,"bin","volta_core::hook::tool::MetadataHook","",106,null],[12,"base_path","","",106,null],[5,"calculate_extension","volta_core::hook::tool","Use the expected filename to determine the extension for…",null,[[],["option",4]]],[5,"execute_binary","","Execute a shell command and return the trimmed stdout from…",null,[[["option",4],["string",3],["path",3]],[["fallible",6],["string",3]]]],[17,"ARCH_TEMPLATE","","",null,null],[17,"OS_TEMPLATE","","",null,null],[17,"VERSION_TEMPLATE","","",null,null],[17,"EXTENSION_TEMPLATE","","",null,null],[17,"FILENAME_TEMPLATE","","",null,null],[11,"resolve","","Performs resolution of the distro URL based on the given…",103,[[["version",3]],[["fallible",6],["string",3]]]],[11,"resolve","","Performs resolution of the metadata URL based on the given…",105,[[],[["fallible",6],["string",3]]]],[11,"init","volta_core::hook","Constructs a new `LazyHookConfig`",91,[[],["lazyhookconfig",3]]],[11,"get","","Forces the loading of the hook configuration from both…",91,[[["project",3],["option",4]],[["fallible",6],["hookconfig",3]]]],[11,"merge","","Extends this ToolHooks with another, giving precendence to…",93,[[]]],[11,"node","","",92,[[],[["toolhooks",3],["option",4]]]],[11,"npm","","",92,[[],[["toolhooks",3],["option",4]]]],[11,"yarn","","",92,[[],[["option",4],["toolhooks",3]]]],[11,"package","","",92,[[],[["toolhooks",3],["option",4]]]],[11,"events","","",92,[[],[["eventhooks",3],["option",4]]]],[11,"current","","Returns the current hooks, which are a merge between the…",92,[[["project",3],["option",4]],["fallible",6]]],[11,"from_paths","","Returns the merged hooks loaded from an iterator of…",92,[[],["fallible",6]]],[11,"from_file","","",92,[[["path",3]],[["option",4],["fallible",6]]]],[11,"merge","","Merges this HookConfig with another, giving precedence to…",92,[[]]],[11,"merge","","Merges this EventHooks with another, giving precedence to…",94,[[]]],[0,"inventory","volta_core","Provides types for working with Volta\'s inventory, the…",null,null],[5,"node_available","volta_core::inventory","Checks if a given Node version image is available on the…",null,[[["version",3]],["fallible",6]]],[5,"node_versions","","Collects a set of all Node versions fetched on the local…",null,[[],[["btreeset",3],["fallible",6]]]],[5,"npm_available","","Checks if a given npm version image is available on the…",null,[[["version",3]],["fallible",6]]],[5,"npm_versions","","Collects a set of all npm versions fetched on the local…",null,[[],[["btreeset",3],["fallible",6]]]],[5,"yarn_available","","Checks if a given Yarn version image is available on the…",null,[[["version",3]],["fallible",6]]],[5,"yarn_versions","","Collects a set of all Yarn versions fetched on the local…",null,[[],[["btreeset",3],["fallible",6]]]],[5,"package_available","","Checks if a given package version image is available on…",null,[[["version",3]],["fallible",6]]],[5,"package_configs","","Collects a set of all Package Configs on the local machine",null,[[],[["btreeset",3],["fallible",6]]]],[5,"read_versions","","Reads the contents of a directory and returns the set of…",null,[[["path",3]],[["btreeset",3],["fallible",6]]]],[0,"layout","volta_core","",null,null],[3,"VOLTA_HOME","volta_core::layout","",null,null],[12,"__private_field","","",107,null],[3,"VOLTA_INSTALL","","",null,null],[12,"__private_field","","",108,null],[5,"env_paths","","",null,[[],[["fallible",6],["vec",3]]]],[5,"volta_home","","",null,[[],[["fallible",6],["voltahome",3]]]],[5,"volta_install","","",null,[[],[["voltainstall",3],["fallible",6]]]],[5,"default_install_dir","","Determine the binary install directory from the currently…",null,[[],[["fallible",6],["pathbuf",3]]]],[0,"unix","","",null,null],[5,"default_home_dir","volta_core::layout::unix","",null,[[],[["fallible",6],["pathbuf",3]]]],[5,"env_paths","","",null,[[],[["fallible",6],["vec",3]]]],[0,"log","volta_core","This module provides a custom Logger implementation for…",null,null],[3,"Logger","volta_core::log","",null,null],[12,"context","","",109,null],[12,"level","","",109,null],[4,"LogContext","","Represents the context from which the logger was created",null,null],[13,"Volta","","Log messages from the `volta` executable",110,null],[13,"Shim","","Log messages from one of the shims",110,null],[13,"Migration","","Log messages from the migration",110,null],[4,"LogVerbosity","","Represents the level of verbosity that was requested by…",null,null],[13,"Quiet","","",111,null],[13,"Default","","",111,null],[13,"Verbose","","",111,null],[5,"wrap_content","","Wraps the supplied content to the terminal width, if we…",null,[[],["string",3]]],[5,"level_from_env","","Determines the correct logging level based on the…",null,[[],["levelfilter",4]]],[17,"ERROR_PREFIX","","",null,null],[17,"WARNING_PREFIX","","",null,null],[17,"SHIM_ERROR_PREFIX","","",null,null],[17,"SHIM_WARNING_PREFIX","","",null,null],[17,"MIGRATION_ERROR_PREFIX","","",null,null],[17,"MIGRATION_WARNING_PREFIX","","",null,null],[17,"VOLTA_LOGLEVEL","","",null,null],[17,"ALLOWED_PREFIX","","",null,null],[17,"WRAP_INDENT","","",null,null],[11,"init","","Initialize the global logger with a Logger instance Will…",109,[[["logcontext",4],["logverbosity",4]],[["setloggererror",3],["result",4]]]],[11,"new","","",109,[[["logcontext",4],["logverbosity",4]]]],[11,"log_error","","",109,[[]]],[11,"log_warning","","",109,[[]]],[0,"manifest","volta_core","Provides the `Manifest` type, which represents a Node…",null,null],[3,"BinManifest","volta_core::manifest","",null,null],[12,"bin","","The `bin` section, containing a map of binary names to…",112,null],[12,"engine","","The `engines` section, containing a spec of the Node…",112,null],[0,"serial","","",null,null],[3,"BinMap","volta_core::manifest::serial","",null,null],[12,"0","","",113,null],[3,"RawBinManifest","","",null,null],[12,"name","","",114,null],[12,"bin","","",114,null],[12,"engines","","",114,null],[3,"Engines","","",null,null],[12,"node","","",115,null],[3,"BinVisitor","","",null,null],[12,"marker","","",116,null],[17,"_IMPL_DESERIALIZE_FOR_RawBinManifest","","",null,null],[17,"_IMPL_SERIALIZE_FOR_Engines","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Engines","","",null,null],[11,"deserialize","","Handle deserialization where users may have supplied bad…",115,[[],[["option",4],["result",4]]]],[11,"new","","",116,[[]]],[11,"for_dir","volta_core::manifest","",112,[[["path",3]],["fallible",6]]],[0,"monitor","volta_core","",null,null],[3,"Monitor","volta_core::monitor","",null,null],[12,"monitor_process","","",117,null],[5,"spawn_process","","",null,[[],[["option",4],["child",3]]]],[11,"new","","Returns the current monitor.",117,[[],["monitor",3]]],[11,"send_events","","send event to the monitor process",117,[[]]],[0,"platform","volta_core","",null,null],[3,"Image","volta_core::platform","A platform image.",null,null],[12,"node","","The pinned version of Node.",118,null],[12,"npm","","The custom version of npm, if any. `None` represents using…",118,null],[12,"yarn","","The pinned version of Yarn, if any.",118,null],[3,"System","","A lightweight namespace type representing the system…",null,null],[3,"Sourced","","",null,null],[12,"value","","",119,null],[12,"source","","",119,null],[3,"PlatformSpec","","Represents the specification of a single Platform,…",null,null],[12,"node","","",120,null],[12,"npm","","",120,null],[12,"yarn","","",120,null],[3,"CliPlatform","","Represents a (maybe) platform with values from the command…",null,null],[12,"node","","",121,null],[12,"npm","","",121,null],[12,"yarn","","",121,null],[3,"Platform","","Represents a real Platform, with Versions pulled from one…",null,null],[12,"node","","",122,null],[12,"npm","","",122,null],[12,"yarn","","",122,null],[4,"Source","","The source with which a version is associated",null,null],[13,"Default","","Represents a version from the user default platform",123,null],[13,"Project","","Represents a version from a project manifest",123,null],[13,"Binary","","Represents a version from a pinned Binary platform",123,null],[13,"CommandLine","","Represents a version from the command line (via `volta run`)",123,null],[4,"InheritOption","","Represents 3 possible states: Having a value, not having a…",null,null],[13,"Some","","",124,null],[13,"None","","",124,null],[13,"Inherit","","",124,null],[5,"build_path_error","","",null,[[],["errorkind",4]]],[0,"image","","",null,null],[3,"Image","volta_core::platform::image","A platform image.",null,null],[12,"node","","The pinned version of Node.",118,null],[12,"npm","","The custom version of npm, if any. `None` represents using…",118,null],[12,"yarn","","The pinned version of Yarn, if any.",118,null],[11,"bins","volta_core::platform","",118,[[],[["fallible",6],["vec",3]]]],[11,"path","","Produces a modified version of the current `PATH`…",118,[[],[["fallible",6],["osstring",3]]]],[11,"resolve_npm","","Determines the sourced version of npm that will be…",118,[[],[["sourced",3],["fallible",6]]]],[0,"system","","",null,null],[3,"System","volta_core::platform::system","A lightweight namespace type representing the system…",null,null],[11,"path","volta_core::platform","Produces a modified version of the current `PATH`…",125,[[],[["fallible",6],["osstring",3]]]],[11,"with_default","","",119,[[]]],[11,"with_project","","",119,[[]]],[11,"with_binary","","",119,[[]]],[11,"with_command_line","","",119,[[]]],[11,"as_ref","","",119,[[],["sourced",3]]],[11,"cloned","","",119,[[],["sourced",3]]],[11,"map","","Applies a function to the contained value (if any)",124,[[],["inheritoption",4]]],[11,"inherit","","Converts the `InheritOption` into a regular `Option` by…",124,[[["option",4]],["option",4]]],[11,"as_default","","Convert this PlatformSpec into a Platform with all sources…",120,[[],["platform",3]]],[11,"as_project","","Convert this PlatformSpec into a Platform with all sources…",120,[[],["platform",3]]],[11,"as_binary","","Convert this PlatformSpec into a Platform with all sources…",120,[[],["platform",3]]],[11,"merge","","Merges the `CliPlatform` with a `Platform`, inheriting…",121,[[["platform",3]],["platform",3]]],[11,"current","","Returns the user\'s currently active platform, if any",122,[[["session",3]],[["option",4],["fallible",6]]]],[11,"with_cli","","Returns the platform created by merging a…",122,[[["session",3],["cliplatform",3]],[["option",4],["fallible",6]]]],[11,"checkout","","Check out a `Platform` into a fully-realized `Image`",122,[[["session",3]],[["fallible",6],["image",3]]]],[0,"project","volta_core","Provides the `Project` type, which represents a Node…",null,null],[3,"LazyProject","volta_core::project","A lazily loaded Project",null,null],[12,"project","","",126,null],[3,"Project","","A Node project workspace in the filesystem",null,null],[12,"manifest_file","","",127,null],[12,"workspace_manifests","","",127,null],[12,"dependencies","","",127,null],[12,"platform","","",127,null],[3,"PartialPlatform","","",null,null],[12,"node","","",128,null],[12,"npm","","",128,null],[12,"yarn","","",128,null],[5,"is_node_root","","",null,[[["path",3]]]],[5,"is_node_modules","","",null,[[["path",3]]]],[5,"is_dependency","","",null,[[["path",3]]]],[5,"is_project_root","","",null,[[["path",3]]]],[5,"find_closest_root","","Starts at `base_dir` and walks up the directory tree until…",null,[[["pathbuf",3]],[["option",4],["pathbuf",3]]]],[0,"serial","","",null,null],[3,"Manifest","volta_core::project::serial","",null,null],[12,"dependency_maps","","",129,null],[12,"platform","","",129,null],[12,"extends","","",129,null],[3,"RawManifest","","",null,null],[12,"dependencies","","",130,null],[12,"dev_dependencies","","",130,null],[12,"volta","","",130,null],[3,"ToolchainSpec","","",null,null],[12,"node","","",131,null],[12,"npm","","",131,null],[12,"yarn","","",131,null],[12,"extends","","",131,null],[4,"ManifestKey","","",null,null],[13,"Node","","",132,null],[13,"Npm","","",132,null],[13,"Yarn","","",132,null],[5,"update_manifest","","Updates the `volta` hash in the specified manifest with…",null,[[["version",3],["option",4],["path",3],["manifestkey",4]],["fallible",6]]],[6,"DependencyMapIterator","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_RawManifest","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_ToolchainSpec","","",null,null],[17,"_IMPL_SERIALIZE_FOR_ToolchainSpec","","",null,null],[11,"from_file","","",129,[[["path",3]],["fallible",6]]],[11,"from_file","","",130,[[["path",3]],["fallible",6]]],[11,"parse_split","","Moves the tool versions into a `PartialPlatform` and…",131,[[],["fallible",6]]],[11,"init","volta_core::project","",126,[[]]],[11,"get","","",126,[[],[["fallible",6],["option",4]]]],[11,"get_mut","","",126,[[],[["fallible",6],["option",4]]]],[11,"for_current_dir","","Creates an optional Project instance from the current…",127,[[],[["option",4],["fallible",6]]]],[11,"for_dir","","Creates an optional Project instance from the specified…",127,[[["pathbuf",3]],[["option",4],["fallible",6]]]],[11,"from_file","","Creates a Project instance from the given package manifest…",127,[[["pathbuf",3]],["fallible",6]]],[11,"manifest_file","","Returns a reference to the manifest file for the current…",127,[[],["path",3]]],[11,"workspace_roots","","Returns an iterator of paths to all of the workspace roots",127,[[]]],[11,"platform","","Returns a reference to the Project\'s `PlatformSpec`, if…",127,[[],[["platformspec",3],["option",4]]]],[11,"has_direct_dependency","","Returns true if the project dependency map contains the…",127,[[]]],[11,"has_direct_bin","","Returns true if the input binary name is a direct…",127,[[["osstr",3]],["fallible",6]]],[11,"find_bin","","Searches the project roots to find the path to a…",127,[[["asref",8],["path",3]],[["option",4],["pathbuf",3]]]],[11,"pin_node","","Pins the Node version in this project\'s manifest file",127,[[["version",3]],["fallible",6]]],[11,"pin_npm","","Pins the npm version in this project\'s manifest file",127,[[["option",4],["version",3]],["fallible",6]]],[11,"pin_yarn","","Pins the Yarn version in this project\'s manifest file",127,[[["option",4],["version",3]],["fallible",6]]],[11,"merge","","",128,[[["partialplatform",3]],["partialplatform",3]]],[0,"run","volta_core","Types and helpers for executing command-line tools.",null,null],[3,"ToolCommand","volta_core::run","Process builder for launching a Volta-managed tool",null,null],[12,"command","","The wrapped Command",133,null],[12,"on_failure","","The Volta error with which to wrap any failure.",133,null],[4,"CommandArg","","Distinguish global `add` commands in npm or yarn from all…",null,null],[13,"GlobalAdd","","The command is a global add command.",134,null],[13,"NotGlobalAdd","","The command is a local, i.e. non-global, add command.",134,null],[5,"execute_shim","","",null,[[["session",3]],[["fallible",6],["exitstatus",3]]]],[5,"execute_tool","","",null,[[["session",3],["osstr",3],["cliplatform",3]],[["fallible",6],["exitstatus",3]]]],[5,"get_tool_name","","",null,[[["argsos",3]],[["fallible",6],["osstring",3]]]],[5,"tool_name_from_file_name","","",null,[[["osstr",3]],["osstring",3]]],[5,"command_with_path","","Create a command in the given context by setting the…",null,[[["osstr",3]],["command",3]]],[5,"intercept_global_installs","","Determine if we should intercept global installs or not",null,[[]]],[5,"debug_tool_message","","Write the tool version and source to the debug log",null,[[["sourced",3]]]],[0,"binary","","",null,null],[3,"DefaultBinary","volta_core::run::binary","Information about the location and execution context of…",null,null],[12,"bin_path","","",135,null],[12,"platform","","",135,null],[12,"loader","","",135,null],[5,"command","","",null,[[["session",3],["osstr",3],["cliplatform",3]],[["toolcommand",3],["fallible",6]]]],[11,"from_config","","",135,[[["binconfig",3],["session",3]],["fallible",6]]],[11,"from_name","","",135,[[["osstr",3],["session",3]],[["option",4],["fallible",6]]]],[0,"node","volta_core::run","",null,null],[5,"command","volta_core::run::node","",null,[[["session",3],["cliplatform",3]],[["toolcommand",3],["fallible",6]]]],[0,"npm","volta_core::run","",null,null],[5,"command","volta_core::run::npm","",null,[[["session",3],["cliplatform",3]],[["toolcommand",3],["fallible",6]]]],[5,"check_npm_install","","",null,[[],["commandarg",4]]],[0,"npx","volta_core::run","",null,null],[5,"command","volta_core::run::npx","",null,[[["session",3],["cliplatform",3]],[["toolcommand",3],["fallible",6]]]],[0,"yarn","volta_core::run","",null,null],[5,"command","volta_core::run::yarn","",null,[[["session",3],["cliplatform",3]],[["toolcommand",3],["fallible",6]]]],[5,"get_yarn_platform","","Determine the correct platform (project or default) and…",null,[[["session",3],["cliplatform",3]],[["option",4],["fallible",6]]]],[5,"check_yarn_add","","",null,[[],["commandarg",4]]],[17,"VOLTA_BYPASS","volta_core::run","",null,null],[17,"UNSAFE_GLOBAL","","",null,null],[11,"direct","","Build a ToolCommand that is directly calling a tool in the…",133,[[["osstr",3]]]],[11,"project_local","","Build a ToolCommand that is calling a binary in the…",133,[[["osstr",3]]]],[11,"passthrough","","Build a ToolCommand that is calling a command that Volta…",133,[[["osstr",3],["errorkind",4]],["fallible",6]]],[11,"arg","","Add a single argument to the Command.",133,[[["asref",8],["osstr",3]],["toolcommand",3]]],[11,"args","","Add multiple arguments to the Command.",133,[[],["toolcommand",3]]],[11,"envs","","Adds or updates multiple environment variables for the…",133,[[],["toolcommand",3]]],[11,"current_dir","","Set the current working directory for the Command",133,[[["asref",8],["path",3]],["toolcommand",3]]],[11,"status","","Execute the command, returning its status",133,[[],[["fallible",6],["exitstatus",3]]]],[11,"output","","Execute the command, returning all of its output to the…",133,[[],[["output",3],["fallible",6]]]],[0,"session","volta_core","Provides the `Session` type, which represents the user\'s…",null,null],[3,"Session","volta_core::session","Represents the user\'s state during an execution of a Volta…",null,null],[12,"hooks","","",136,null],[12,"toolchain","","",136,null],[12,"project","","",136,null],[12,"event_log","","",136,null],[4,"ActivityKind","","",null,null],[13,"Fetch","","",137,null],[13,"Install","","",137,null],[13,"Uninstall","","",137,null],[13,"List","","",137,null],[13,"Current","","",137,null],[13,"Default","","",137,null],[13,"Pin","","",137,null],[13,"Node","","",137,null],[13,"Npm","","",137,null],[13,"Npx","","",137,null],[13,"Yarn","","",137,null],[13,"Volta","","",137,null],[13,"Tool","","",137,null],[13,"Help","","",137,null],[13,"Version","","",137,null],[13,"Binary","","",137,null],[13,"Shim","","",137,null],[13,"Completions","","",137,null],[13,"Which","","",137,null],[13,"Setup","","",137,null],[13,"Run","","",137,null],[11,"init","","Constructs a new `Session`.",136,[[],["session",3]]],[11,"project","","Produces a reference to the current Node project, if any.",136,[[],[["fallible",6],["option",4]]]],[11,"project_mut","","Produces a mutable reference to the current Node project,…",136,[[],[["fallible",6],["option",4]]]],[11,"default_platform","","Returns the user\'s default platform, if any",136,[[],[["fallible",6],["option",4]]]],[11,"project_platform","","Returns the current project\'s pinned platform image, if any.",136,[[],[["fallible",6],["option",4]]]],[11,"toolchain","","Produces a reference to the current toolchain (default…",136,[[],[["fallible",6],["toolchain",3]]]],[11,"toolchain_mut","","Produces a mutable reference to the current toolchain",136,[[],[["toolchain",3],["fallible",6]]]],[11,"hooks","","Produces a reference to the hook configuration",136,[[],[["fallible",6],["hookconfig",3]]]],[11,"add_event_start","","",136,[[["activitykind",4]]]],[11,"add_event_end","","",136,[[["exitcode",4],["activitykind",4]]]],[11,"add_event_tool_end","","",136,[[["activitykind",4]]]],[11,"add_event_error","","",136,[[["voltaerror",3],["activitykind",4]]]],[11,"publish_to_event_log","","",136,[[]]],[11,"exit","","",136,[[["exitcode",4]]]],[11,"exit_tool","","",136,[[]]],[0,"shim","volta_core","Provides utilities for modifying shims for 3rd-party…",null,null],[4,"ShimResult","volta_core::shim","",null,null],[13,"Created","","",138,null],[13,"AlreadyExists","","",138,null],[13,"Deleted","","",138,null],[13,"DoesntExist","","",138,null],[5,"regenerate_shims_for_dir","","",null,[[["path",3]],["fallible",6]]],[5,"get_shim_list_deduped","","",null,[[["path",3]],[["hashset",3],["fallible",6]]]],[5,"entry_to_shim_name","","",null,[[],[["option",4],["string",3]]]],[5,"create","","",null,[[],[["shimresult",4],["fallible",6]]]],[5,"delete","","",null,[[],[["shimresult",4],["fallible",6]]]],[0,"signal","volta_core","",null,null],[5,"pass_control_to_shim","volta_core::signal","",null,[[]]],[5,"setup_signal_handler","","",null,[[]]],[7,"SHIM_HAS_CONTROL","","",null,null],[17,"INTERRUPTED_EXIT_CODE","","",null,null],[0,"style","volta_core","The view layer of Volta, with utilities for styling…",null,null],[5,"success_prefix","volta_core::style","Generate the styled prefix for a success message",null,[[],["styledobject",3]]],[5,"note_prefix","","Generate the styled prefix for a note",null,[[],["styledobject",3]]],[5,"format_error_cause","","Format the underlying cause of an error",null,[[["error",8]],["string",3]]],[5,"action_str","","Determines the string to display based on the Origin of…",null,[[["origin",4]]]],[5,"tool_version","","",null,[[],["string",3]]],[5,"text_width","","Get the width of the terminal, limited to a maximum of…",null,[[],["option",4]]],[5,"progress_bar","","Constructs a command-line progress bar based on the…",null,[[["origin",4]],["progressbar",3]]],[5,"progress_spinner","","Constructs a command-line progress spinner with the…",null,[[],["progressbar",3]]],[17,"MAX_WIDTH","","",null,null],[17,"MAX_PROGRESS_WIDTH","","",null,null],[0,"tool","volta_core","",null,null],[3,"BinConfig","volta_core::tool","Configuration information about an installed binary from a…",null,null],[12,"name","","The binary name",139,null],[12,"package","","The package that installed this binary",139,null],[12,"version","","The package version",139,null],[12,"path","","The relative path of the binary in the installed package",139,null],[12,"platform","","The platform used to install this binary",139,null],[12,"loader","","The loader information for the script, if any",139,null],[3,"BinLoader","","Information about the Shebang script loader (e.g.…",null,null],[12,"command","","The command used to run a script",140,null],[12,"args","","Any additional arguments specified for the loader",140,null],[3,"PackageConfig","","Configuration information about an installed package.",null,null],[12,"name","","The package name",141,null],[12,"version","","The package version",141,null],[12,"platform","","The platform used to install this package",141,null],[12,"bins","","The binaries installed by this package",141,null],[3,"PackageDetails","","Details about a package in the npm Registry",null,null],[12,"version","","",142,null],[12,"tarball_url","","",142,null],[12,"shasum","","",142,null],[4,"Spec","","Specification for a tool and its associated version.",null,null],[13,"Node","","",143,null],[13,"Npm","","",143,null],[13,"Yarn","","",143,null],[13,"Package","","",143,null],[5,"load_default_npm_version","","Load the local npm version file to determine the default…",null,[[["version",3]],[["fallible",6],["version",3]]]],[5,"debug_already_fetched","","",null,[[["display",8],["sized",8]]]],[5,"info_installed","","",null,[[["display",8],["sized",8]]]],[5,"info_fetched","","",null,[[["display",8],["sized",8]]]],[5,"info_pinned","","",null,[[["display",8],["sized",8]]]],[5,"info_project_version","","",null,[[["display",8],["sized",8]]]],[5,"download_tool_error","","",null,[[["spec",4]]]],[5,"registry_fetch_error","","",null,[[]]],[0,"node","","",null,null],[3,"NodeVersion","volta_core::tool::node","A full Node version including not just the version of Node…",null,null],[12,"runtime","","The version of Node itself.",144,null],[12,"npm","","The npm version globally installed with the Node distro.",144,null],[3,"Node","","The Tool implementation for fetching and installing Node",null,null],[12,"version","","",145,null],[5,"load_default_npm_version","","Load the local npm version file to determine the default…",null,[[["version",3]],[["fallible",6],["version",3]]]],[5,"resolve","","",null,[[["session",3],["versionspec",4]],[["fallible",6],["version",3]]]],[0,"fetch","","Provides fetcher for Node distributions",null,null],[3,"Manifest","volta_core::tool::node::fetch","The portion of npm\'s `package.json` file that we care about",null,null],[12,"version","","",146,null],[5,"public_node_server_root","","",null,[[],["string",3]]],[5,"npm_manifest_path","","",null,[[],["pathbuf",3]]],[5,"fetch","","",null,[[["toolhooks",3],["version",3],["option",4]],[["fallible",6],["nodeversion",3]]]],[5,"unpack_archive","","Unpack the node archive into the image directory so that…",null,[[["version",3],["box",3],["archive",8]],[["fallible",6],["nodeversion",3]]]],[5,"load_cached_distro","","Return the archive if it is valid. It may have been…",null,[[["path",3]],[["option",4],["box",3]]]],[5,"determine_remote_url","","Determine the remote URL to download from, using the hooks…",null,[[["toolhooks",3],["version",3],["option",4]],[["fallible",6],["string",3]]]],[5,"fetch_remote_distro","","Fetch the distro archive from the internet",null,[[["version",3],["path",3]],[["fallible",6],["box",3]]]],[5,"load_default_npm_version","","Load the local npm version file to determine the default…",null,[[["version",3]],[["fallible",6],["version",3]]]],[5,"save_default_npm_version","","Save the default npm version to the filesystem for a given…",null,[[["version",3]],["fallible",6]]],[17,"_IMPL_DESERIALIZE_FOR_Manifest","","",null,null],[11,"version","","Parse the version out of a package.json file",146,[[["path",3]],[["fallible",6],["version",3]]]],[0,"metadata","volta_core::tool::node","",null,null],[3,"NodeIndex","volta_core::tool::node::metadata","The index of the public Node server.",null,null],[12,"entries","","",147,null],[3,"NodeEntry","","",null,null],[12,"version","","",148,null],[12,"npm","","",148,null],[12,"files","","",148,null],[12,"lts","","",148,null],[3,"NodeDistroFiles","","The set of available files on the public Node server for a…",null,null],[12,"files","","",149,null],[3,"RawNodeIndex","","",null,null],[12,"0","","",150,null],[3,"RawNodeEntry","","",null,null],[12,"version","","",151,null],[12,"npm","","",151,null],[12,"files","","",151,null],[12,"lts","","",151,null],[5,"lts_version_serde","","",null,[[],["result",4]]],[17,"_IMPL_DESERIALIZE_FOR_RawNodeIndex","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_RawNodeEntry","","",null,null],[0,"resolve","volta_core::tool::node","Provides resolution of Node requirements into specific…",null,null],[5,"public_node_version_index","volta_core::tool::node::resolve","Returns the URL of the index of available Node versions on…",null,[[],["string",3]]],[5,"resolve","","",null,[[["session",3],["versionspec",4]],[["fallible",6],["version",3]]]],[5,"resolve_latest","","",null,[[["toolhooks",3],["option",4]],[["fallible",6],["version",3]]]],[5,"resolve_lts","","",null,[[["toolhooks",3],["option",4]],[["fallible",6],["version",3]]]],[5,"resolve_semver","","",null,[[["toolhooks",3],["versionreq",3],["option",4]],[["fallible",6],["version",3]]]],[5,"resolve_lts_semver","","",null,[[["toolhooks",3],["versionreq",3],["option",4]],[["fallible",6],["version",3]]]],[5,"match_node_version","","",null,[[],[["option",4],["fallible",6]]]],[5,"read_cached_opt","","Reads a public index from the Node cache, if it exists and…",null,[[],[["option",4],["fallible",6]]]],[5,"max_age","","Get the cache max-age of an HTTP reponse.",null,[[["headermap",3]]]],[5,"resolve_node_versions","","",null,[[],[["rawnodeindex",3],["fallible",6]]]],[17,"NODE_DISTRO_OS","volta_core::tool::node","The OS component of a Node distro\'s filename.",null,null],[17,"NODE_DISTRO_ARCH","","The system architecture component of a Node distro\'s name.",null,null],[17,"NODE_DISTRO_EXTENSION","","Filename extension for Node distro files.",null,null],[11,"new","","",145,[[["version",3]]]],[11,"archive_basename","","",145,[[],["string",3]]],[11,"archive_filename","","",145,[[],["string",3]]],[11,"ensure_fetched","","",145,[[["session",3]],[["fallible",6],["nodeversion",3]]]],[0,"npm","volta_core::tool","",null,null],[3,"Npm","volta_core::tool::npm","The Tool implementation for fetching and installing npm",null,null],[12,"version","","",152,null],[3,"BundledNpm","","The Tool implementation for setting npm to the version…",null,null],[5,"resolve","","",null,[[["session",3],["versionspec",4]],[["option",4],["fallible",6]]]],[0,"fetch","","Provides fetcher for npm distributions",null,null],[5,"fetch","volta_core::tool::npm::fetch","",null,[[["option",4],["version",3],["toolhooks",3]],["fallible",6]]],[5,"unpack_archive","","Unpack the npm archive into the image directory so that it…",null,[[["version",3],["box",3],["archive",8]],["fallible",6]]],[5,"load_cached_distro","","Return the archive if it is valid. It may have been…",null,[[["pathbuf",3]],[["option",4],["box",3]]]],[5,"determine_remote_url","","Determine the remote URL to download from, using the hooks…",null,[[["option",4],["version",3],["toolhooks",3]],[["fallible",6],["string",3]]]],[5,"fetch_remote_distro","","Fetch the distro archive from the internet",null,[[["version",3],["path",3]],[["fallible",6],["box",3]]]],[5,"overwrite_launcher","","Overwrite the launcher script",null,[[["path",3]],["fallible",6]]],[0,"resolve","volta_core::tool::npm","Provides resolution of npm Version requirements into…",null,null],[5,"resolve","volta_core::tool::npm::resolve","",null,[[["session",3],["versionspec",4]],[["option",4],["fallible",6]]]],[5,"fetch_npm_index","","",null,[[["option",4],["toolhooks",3]],["fallible",6]]],[5,"resolve_tag","","",null,[[["option",4],["toolhooks",3]],[["fallible",6],["version",3]]]],[5,"resolve_semver","","",null,[[["option",4],["versionreq",3],["toolhooks",3]],[["fallible",6],["version",3]]]],[11,"new","volta_core::tool::npm","",152,[[["version",3]]]],[11,"archive_basename","","",152,[[],["string",3]]],[11,"archive_filename","","",152,[[],["string",3]]],[11,"ensure_fetched","","",152,[[["session",3]],["fallible",6]]],[0,"package","volta_core::tool","",null,null],[3,"BinConfig","volta_core::tool::package","Configuration information about an installed binary from a…",null,null],[12,"name","","The binary name",139,null],[12,"package","","The package that installed this binary",139,null],[12,"version","","The package version",139,null],[12,"path","","The relative path of the binary in the installed package",139,null],[12,"platform","","The platform used to install this binary",139,null],[12,"loader","","The loader information for the script, if any",139,null],[3,"BinLoader","","Information about the Shebang script loader (e.g.…",null,null],[12,"command","","The command used to run a script",140,null],[12,"args","","Any additional arguments specified for the loader",140,null],[3,"PackageConfig","","Configuration information about an installed package.",null,null],[12,"name","","The package name",141,null],[12,"version","","The package version",141,null],[12,"platform","","The platform used to install this package",141,null],[12,"bins","","The binaries installed by this package",141,null],[3,"Package","","The Tool implementation for fetching and installing…",null,null],[12,"name","","",153,null],[12,"details","","",153,null],[5,"resolve","","",null,[[["session",3],["versionspec",4]],[["fallible",6],["packagedetails",3]]]],[5,"bin_full_path","","",null,[[["version",3]],[["fallible",6],["pathbuf",3]]]],[5,"uninstall","","Uninstall the specified package.",null,[[],["fallible",6]]],[5,"remove_config_and_shim","","",null,[[],["fallible",6]]],[5,"binaries_from_package","","Reads the contents of a directory and returns a Vec…",null,[[],[["vec",3],["fallible",6]]]],[0,"fetch","","Provides fetcher for 3rd-party packages",null,null],[5,"fetch","volta_core::tool::package::fetch","",null,[[["session",3],["packagedetails",3]],["fallible",6]]],[5,"load_cached_distro","","",null,[[["path",3]],[["option",4],["box",3]]]],[5,"fetch_remote_distro","","",null,[[["session",3],["path",3],["packagedetails",3]],[["fallible",6],["box",3]]]],[5,"npm_pack_command_for","","",null,[[["session",3],["path",3]],[["toolcommand",3],["fallible",6]]]],[5,"unpack_archive","","",null,[[["version",3],["box",3],["archive",8]],["fallible",6]]],[5,"find_unpack_dir","","Figure out the unpacked package directory name dynamically",null,[[["path",3]],[["fallible",6],["pathbuf",3]]]],[0,"install","volta_core::tool::package","Provides installation steps for 3rd-party packages,…",null,null],[3,"SHEBANG","volta_core::tool::package::install","",null,null],[12,"__private_field","","",154,null],[5,"install","","",null,[[["version",3],["session",3]],[["fallible",6],["hashmap",3]]]],[5,"determine_engine","","",null,[[["path",3]],[["fallible",6],["versionspec",4]]]],[5,"write_configs","","",null,[[["hashmap",3],["version",3],["platformspec",3]],["fallible",6]]],[5,"install_dependencies","","",null,[[["image",3],["path",3]],["fallible",6]]],[5,"build_install_command","","",null,[[["path",3],["osstr",3]],["command",3]]],[5,"read_bins","","Read a fetched package and generate a map of all the bins…",null,[[["version",3]],[["fallible",6],["hashmap",3]]]],[5,"determine_script_loader","","Read the script for a shebang loader. If found, return it…",null,[[["path",3]],[["fallible",6],["option",4]]]],[0,"metadata","volta_core::tool::package","",null,null],[3,"PackageConfig","volta_core::tool::package::metadata","Configuration information about an installed package.",null,null],[12,"name","","The package name",141,null],[12,"version","","The package version",141,null],[12,"platform","","The platform used to install this package",141,null],[12,"bins","","The binaries installed by this package",141,null],[3,"BinConfig","","Configuration information about an installed binary from a…",null,null],[12,"name","","The binary name",139,null],[12,"package","","The package that installed this binary",139,null],[12,"version","","The package version",139,null],[12,"path","","The relative path of the binary in the installed package",139,null],[12,"platform","","The platform used to install this binary",139,null],[12,"loader","","The loader information for the script, if any",139,null],[3,"BinLoader","","Information about the Shebang script loader (e.g.…",null,null],[12,"command","","The command used to run a script",140,null],[12,"args","","Any additional arguments specified for the loader",140,null],[3,"NpmViewData","","",null,null],[12,"name","","",155,null],[12,"version","","",155,null],[12,"dist","","",155,null],[12,"dist_tags","","",155,null],[3,"RawPackageConfig","","",null,null],[12,"name","","",156,null],[12,"version","","",156,null],[12,"platform","","",156,null],[12,"bins","","",156,null],[3,"RawBinConfig","","",null,null],[12,"name","","",157,null],[12,"package","","",157,null],[12,"version","","",157,null],[12,"path","","",157,null],[12,"platform","","",157,null],[12,"loader","","",157,null],[3,"RawBinLoader","","",null,null],[12,"command","","",158,null],[12,"args","","",158,null],[17,"_IMPL_DESERIALIZE_FOR_NpmViewData","","",null,null],[17,"_IMPL_SERIALIZE_FOR_RawPackageConfig","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_RawPackageConfig","","",null,null],[17,"_IMPL_SERIALIZE_FOR_RawBinConfig","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_RawBinConfig","","",null,null],[17,"_IMPL_SERIALIZE_FOR_RawBinLoader","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_RawBinLoader","","",null,null],[11,"into_json","","",156,[[],[["fallible",6],["string",3]]]],[11,"from_json","","",156,[[["string",3]],["fallible",6]]],[11,"write","","",156,[[],["fallible",6]]],[11,"from_file","volta_core::tool","",141,[[["path",3]],["fallible",6]]],[11,"into_json","volta_core::tool::package::metadata","",157,[[],[["fallible",6],["string",3]]]],[11,"from_json","","",157,[[["string",3]],["fallible",6]]],[11,"write","","Write the config to disk",157,[[],["fallible",6]]],[11,"from_file","volta_core::tool","",139,[[["pathbuf",3]],["fallible",6]]],[0,"resolve","volta_core::tool::package","Provides resolution of 3rd-party packages into specific…",null,null],[5,"resolve","volta_core::tool::package::resolve","",null,[[["session",3],["versionspec",4]],[["fallible",6],["packagedetails",3]]]],[5,"resolve_tag","","",null,[[["session",3]],[["fallible",6],["packagedetails",3]]]],[5,"resolve_semver","","",null,[[["versionreq",3],["session",3]],[["fallible",6],["packagedetails",3]]]],[5,"npm_view_query","","Use `npm view` to get the info for the package. This…",null,[[["session",3]],[["fallible",6],["packageindex",3]]]],[5,"npm_view_command_for","","",null,[[["session",3]],[["toolcommand",3],["fallible",6]]]],[5,"resolve_package_metadata","","",null,[[],[["fallible",6],["packageindex",3]]]],[11,"new","volta_core::tool::package","",153,[[["string",3],["packagedetails",3]]]],[11,"ensure_fetched","","",153,[[["session",3]],["fallible",6]]],[11,"is_installed","","",153,[[]]],[0,"registry","volta_core::tool","",null,null],[3,"PackageDetails","volta_core::tool::registry","Details about a package in the npm Registry",null,null],[12,"version","","",142,null],[12,"tarball_url","","",142,null],[12,"shasum","","",142,null],[3,"PackageIndex","","Index of versions of a specific package from the npm…",null,null],[12,"tags","","",159,null],[12,"entries","","",159,null],[3,"RawPackageMetadata","","Package Metadata Response",null,null],[12,"name","","",160,null],[12,"versions","","",160,null],[12,"dist_tags","","",160,null],[3,"RawPackageVersionInfo","","",null,null],[12,"version","","",161,null],[12,"dist","","",161,null],[3,"RawDistInfo","","",null,null],[12,"shasum","","",162,null],[12,"tarball","","",162,null],[5,"public_registry_index","","",null,[[],["string",3]]],[5,"public_registry_package","","",null,[[],["string",3]]],[17,"NPM_ABBREVIATED_ACCEPT_HEADER","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_RawPackageMetadata","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_RawPackageVersionInfo","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_RawDistInfo","","",null,null],[0,"serial","volta_core::tool","",null,null],[3,"TOOL_SPEC_PATTERN","volta_core::tool::serial","",null,null],[12,"__private_field","","",163,null],[3,"HAS_VERSION","","",null,null],[12,"__private_field","","",164,null],[5,"is_version_like","","Determine if a given string is \\\"version-like\\\".",null,[[]]],[11,"from_str_and_version","volta_core::tool","",143,[[["versionspec",4]]]],[11,"try_from_str","","Try to parse a tool and version from a string like `[@].",143,[[],["fallible",6]]],[11,"from_strings","","Get a valid, sorted `Vec<Spec>` given a `Vec<String>`.",143,[[],[["fallible",6],["vec",3]]]],[11,"check_args","","Check the args for the bad pattern of `volta install…",143,[[],["fallible",6]]],[11,"sort_comparator","","Compare `Spec`s for sorting when converting from strings",143,[[["spec",4]],["ordering",4]]],[0,"yarn","","",null,null],[3,"Yarn","volta_core::tool::yarn","The Tool implementation for fetching and installing Yarn",null,null],[12,"version","","",165,null],[5,"resolve","","",null,[[["session",3],["versionspec",4]],[["fallible",6],["version",3]]]],[0,"fetch","","Provides fetcher for Yarn distributions",null,null],[5,"public_yarn_server_root","volta_core::tool::yarn::fetch","",null,[[],["string",3]]],[5,"fetch","","",null,[[["option",4],["version",3],["toolhooks",3]],["fallible",6]]],[5,"unpack_archive","","Unpack the yarn archive into the image directory so that…",null,[[["version",3],["box",3],["archive",8]],["fallible",6]]],[5,"load_cached_distro","","Return the archive if it is valid. It may have been…",null,[[["pathbuf",3]],[["option",4],["box",3]]]],[5,"determine_remote_url","","Determine the remote URL to download from, using the hooks…",null,[[["option",4],["version",3],["toolhooks",3]],[["fallible",6],["string",3]]]],[5,"fetch_remote_distro","","Fetch the distro archive from the internet",null,[[["version",3],["path",3]],[["fallible",6],["box",3]]]],[0,"metadata","volta_core::tool::yarn","",null,null],[3,"YarnIndex","volta_core::tool::yarn::metadata","The public Yarn index.",null,null],[12,"entries","","",166,null],[3,"RawYarnIndex","","",null,null],[12,"0","","",167,null],[3,"RawYarnEntry","","",null,null],[12,"tag_name","","Yarn releases are given a tag name of the form \\\"v$version\\\"…",168,null],[12,"assets","","The GitHub API provides a list of assets. Some Yarn…",168,null],[3,"RawYarnAsset","","",null,null],[12,"name","","The filename of an asset included in a Yarn GitHub release.",169,null],[17,"_IMPL_DESERIALIZE_FOR_RawYarnIndex","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_RawYarnEntry","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_RawYarnAsset","","",null,null],[11,"is_full_release","","Is this entry a full release, i.e., does this entry\'s…",168,[[]]],[0,"resolve","volta_core::tool::yarn","Provides resolution of Yarn requirements into specific…",null,null],[5,"public_yarn_version_index","volta_core::tool::yarn::resolve","Return the URL of the index of available Yarn versions on…",null,[[],["string",3]]],[5,"public_yarn_latest_version","","URL of the latest Yarn version on the public yarnpkg.com",null,[[],["string",3]]],[5,"resolve","","",null,[[["session",3],["versionspec",4]],[["fallible",6],["version",3]]]],[5,"resolve_latest","","",null,[[["option",4],["toolhooks",3]],[["fallible",6],["version",3]]]],[5,"resolve_semver","","",null,[[["option",4],["versionreq",3],["toolhooks",3]],[["fallible",6],["version",3]]]],[11,"new","volta_core::tool::yarn","",165,[[["version",3]]]],[11,"archive_basename","","",165,[[],["string",3]]],[11,"archive_filename","","",165,[[],["string",3]]],[11,"ensure_fetched","","",165,[[["session",3]],["fallible",6]]],[8,"Tool","volta_core::tool","Trait representing all of the actions that can be taken…",null,null],[10,"fetch","","Fetch a Tool into the local inventory",170,[[["box",3],["session",3]],["fallible",6]]],[10,"install","","Install a tool, making it the default so it is available…",170,[[["box",3],["session",3]],["fallible",6]]],[10,"pin","","Pin a tool in the local project so that it is usable…",170,[[["box",3],["session",3]],["fallible",6]]],[11,"resolve","","Resolve a tool spec into a fully realized Tool that can be…",143,[[["session",3]],[["fallible",6],["box",3]]]],[11,"uninstall","","Uninstall a tool, removing it from the local inventory",143,[[],["fallible",6]]],[0,"toolchain","volta_core","",null,null],[3,"LazyToolchain","volta_core::toolchain","Lazily loaded toolchain",null,null],[12,"toolchain","","",171,null],[3,"Toolchain","","",null,null],[12,"platform","","",172,null],[0,"serial","","",null,null],[3,"NodeVersion","volta_core::toolchain::serial","",null,null],[12,"runtime","","",173,null],[12,"npm","","",173,null],[3,"Platform","","",null,null],[12,"node","","",174,null],[12,"yarn","","",174,null],[17,"_IMPL_SERIALIZE_FOR_NodeVersion","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_NodeVersion","","",null,null],[17,"_IMPL_SERIALIZE_FOR_Platform","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Platform","","",null,null],[11,"of","","",174,[[["platformspec",3]]]],[11,"into_platform","","",174,[[],[["option",4],["platformspec",3]]]],[11,"from_json","","Deserialize the input JSON String into a Platform",174,[[["string",3]],["fallible",6]]],[11,"into_json","","Serialize the Platform to a JSON String",174,[[],[["fallible",6],["string",3]]]],[11,"init","volta_core::toolchain","Creates a new `LazyToolchain`",171,[[]]],[11,"get","","Forces loading of the toolchain and returns an immutable…",171,[[],[["fallible",6],["toolchain",3]]]],[11,"get_mut","","Forces loading of the toolchain and returns a mutable…",171,[[],[["toolchain",3],["fallible",6]]]],[11,"current","","",172,[[],[["fallible",6],["toolchain",3]]]],[11,"platform","","",172,[[],[["platformspec",3],["option",4]]]],[11,"set_active_node","","Set the active Node version in the default platform file.",172,[[["version",3]],["fallible",6]]],[11,"set_active_yarn","","Set the active Yarn version in the default platform file.",172,[[["option",4],["version",3]],["fallible",6]]],[11,"set_active_npm","","Set the active Npm version in the default platform file.",172,[[["option",4],["version",3]],["fallible",6]]],[11,"save","","",172,[[],["fallible",6]]],[0,"version","volta_core","",null,null],[4,"VersionSpec","volta_core::version","",null,null],[13,"None","","No version specified (default)",175,null],[13,"Semver","","Semver Range",175,null],[13,"Exact","","Exact Version",175,null],[13,"Tag","","Arbitrary Version Tag",175,null],[4,"VersionTag","","",null,null],[13,"Latest","","The \'latest\' tag, a special case that exists for all…",176,null],[13,"Lts","","The \'lts\' tag, a special case for Node",176,null],[13,"Custom","","An arbitrary tag version",176,null],[13,"LtsRequirement","","An internal tag that represents the latest LTS version…",176,null],[5,"parse_requirements","","",null,[[],[["fallible",6],["versionreq",3]]]],[5,"parse_version","","",null,[[],[["fallible",6],["version",3]]]],[5,"trim_version","","",null,[[]]],[0,"serial","","",null,null],[5,"parse_requirements","volta_core::version::serial","",null,[[],[["reqparseerror",4],["versionreq",3],["result",4]]]],[0,"version_serde","volta_core::version","",null,null],[3,"VersionVisitor","volta_core::version::version_serde","",null,null],[5,"serialize","","",null,[[["version",3]],["result",4]]],[5,"deserialize","","",null,[[],[["version",3],["result",4]]]],[0,"option_version_serde","volta_core::version","",null,null],[5,"serialize","volta_core::version::option_version_serde","",null,[[["option",4]],["result",4]]],[5,"deserialize","","",null,[[],[["result",4],["option",4]]]],[0,"hashmap_version_serde","volta_core::version","",null,null],[3,"Wrapper","volta_core::version::hashmap_version_serde","",null,null],[12,"0","","",177,null],[5,"deserialize","","",null,[[],[["result",4],["hashmap",3]]]],[17,"_IMPL_DESERIALIZE_FOR_Wrapper","","",null,null],[11,"from","volta_core::error","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"from","volta_core::event","",84,[[]]],[11,"into","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"from","volta_core::hook","",91,[[]]],[11,"into","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"from","volta_core::hook::serial","",96,[[]]],[11,"into","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"vzip","","",97,[[]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"from","volta_core::hook::tool","",101,[[]]],[11,"into","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"vzip","","",101,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"vzip","","",105,[[]]],[11,"from","volta_core::layout","",107,[[]]],[11,"into","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"vzip","","",107,[[]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"vzip","","",108,[[]]],[11,"from","volta_core::log","",109,[[]]],[11,"into","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"vzip","","",109,[[]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"vzip","","",110,[[]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"vzip","","",111,[[]]],[11,"from","volta_core::manifest","",112,[[]]],[11,"into","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"vzip","","",112,[[]]],[11,"from","volta_core::manifest::serial","",113,[[]]],[11,"into","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"vzip","","",113,[[]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"vzip","","",114,[[]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"vzip","","",115,[[]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"fmt","","",116,[[["formatter",3]],[["result",4],["error",3]]]],[11,"vzip","","",116,[[]]],[11,"from","volta_core::monitor","",117,[[]]],[11,"into","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"vzip","","",117,[[]]],[11,"from","volta_core::platform","",118,[[]]],[11,"into","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"vzip","","",118,[[]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"vzip","","",125,[[]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"vzip","","",119,[[]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"equivalent","","",120,[[]]],[11,"vzip","","",120,[[]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"vzip","","",121,[[]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"vzip","","",122,[[]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"to_string","","",123,[[],["string",3]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"vzip","","",123,[[]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"vzip","","",124,[[]]],[11,"from","volta_core::project","",126,[[]]],[11,"into","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"vzip","","",126,[[]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"vzip","","",127,[[]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"vzip","","",128,[[]]],[11,"from","volta_core::project::serial","",129,[[]]],[11,"into","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"vzip","","",129,[[]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"vzip","","",130,[[]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"vzip","","",131,[[]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_string","","",132,[[],["string",3]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"vzip","","",132,[[]]],[11,"from","volta_core::run","",133,[[]]],[11,"into","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"vzip","","",133,[[]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"vzip","","",134,[[]]],[11,"from","volta_core::run::binary","",135,[[]]],[11,"into","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"vzip","","",135,[[]]],[11,"from","volta_core::session","",136,[[]]],[11,"into","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"vzip","","",136,[[]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"to_string","","",137,[[],["string",3]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"equivalent","","",137,[[]]],[11,"vzip","","",137,[[]]],[11,"from","volta_core::shim","",138,[[]]],[11,"into","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"vzip","","",138,[[]]],[11,"from","volta_core::tool","",139,[[]]],[11,"into","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"vzip","","",139,[[]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"vzip","","",140,[[]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"equivalent","","",141,[[]]],[11,"vzip","","",141,[[]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"vzip","","",142,[[]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_string","","",143,[[],["string",3]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"vzip","","",143,[[]]],[11,"from","volta_core::tool::node","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"to_string","","",144,[[],["string",3]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"vzip","","",144,[[]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_string","","",145,[[],["string",3]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"vzip","","",145,[[]]],[11,"from","volta_core::tool::node::fetch","",146,[[]]],[11,"into","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"vzip","","",146,[[]]],[11,"from","volta_core::tool::node::metadata","",147,[[]]],[11,"into","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"vzip","","",147,[[]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"vzip","","",148,[[]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"vzip","","",149,[[]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"vzip","","",150,[[]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"vzip","","",151,[[]]],[11,"from","volta_core::tool::npm","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_string","","",152,[[],["string",3]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"vzip","","",152,[[]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_string","","",178,[[],["string",3]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"vzip","","",178,[[]]],[11,"from","volta_core::tool::package","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_string","","",153,[[],["string",3]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"vzip","","",153,[[]]],[11,"from","volta_core::tool::package::install","",154,[[]]],[11,"into","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"vzip","","",154,[[]]],[11,"from","volta_core::tool::package::metadata","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"vzip","","",155,[[]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"vzip","","",156,[[]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"vzip","","",157,[[]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"vzip","","",158,[[]]],[11,"from","volta_core::tool::registry","",159,[[]]],[11,"into","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"vzip","","",159,[[]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"vzip","","",160,[[]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"vzip","","",161,[[]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"vzip","","",162,[[]]],[11,"from","volta_core::tool::serial","",163,[[]]],[11,"into","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"vzip","","",163,[[]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"vzip","","",164,[[]]],[11,"from","volta_core::tool::yarn","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_string","","",165,[[],["string",3]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"vzip","","",165,[[]]],[11,"from","volta_core::tool::yarn::metadata","",166,[[]]],[11,"into","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"vzip","","",166,[[]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"vzip","","",167,[[]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"vzip","","",168,[[]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"vzip","","",169,[[]]],[11,"from","volta_core::toolchain","",171,[[]]],[11,"into","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"vzip","","",171,[[]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"vzip","","",172,[[]]],[11,"from","volta_core::toolchain::serial","",173,[[]]],[11,"into","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"vzip","","",173,[[]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"vzip","","",174,[[]]],[11,"from","volta_core::version","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_string","","",175,[[],["string",3]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"vzip","","",175,[[]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_string","","",176,[[],["string",3]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"vzip","","",176,[[]]],[11,"from","volta_core::version::version_serde","",179,[[]]],[11,"into","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"fmt","","",179,[[["formatter",3]],[["result",4],["error",3]]]],[11,"vzip","","",179,[[]]],[11,"from","volta_core::version::hashmap_version_serde","",177,[[]]],[11,"into","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"vzip","","",177,[[]]],[11,"fetch","volta_core::tool::node","",145,[[["box",3],["session",3]],["fallible",6]]],[11,"install","","",145,[[["box",3],["session",3]],["fallible",6]]],[11,"pin","","",145,[[["box",3],["session",3]],["fallible",6]]],[11,"fetch","volta_core::tool::npm","",152,[[["box",3],["session",3]],["fallible",6]]],[11,"install","","",152,[[["box",3],["session",3]],["fallible",6]]],[11,"pin","","",152,[[["box",3],["session",3]],["fallible",6]]],[11,"fetch","","",178,[[["box",3],["session",3]],["fallible",6]]],[11,"install","","",178,[[["box",3],["session",3]],["fallible",6]]],[11,"pin","","",178,[[["box",3],["session",3]],["fallible",6]]],[11,"fetch","volta_core::tool::package","",153,[[["box",3],["session",3]],["fallible",6]]],[11,"install","","",153,[[["box",3],["session",3]],["fallible",6]]],[11,"pin","","",153,[[["box",3],["session",3]],["fallible",6]]],[11,"fetch","volta_core::tool::yarn","",165,[[["box",3],["session",3]],["fallible",6]]],[11,"install","","",165,[[["box",3],["session",3]],["fallible",6]]],[11,"pin","","",165,[[["box",3],["session",3]],["fallible",6]]],[11,"from","volta_core::error","",0,[[["errorkind",4]]]],[11,"from","volta_core::manifest","",112,[[["rawbinmanifest",3]]]],[11,"from","volta_core::tool::node::metadata","",147,[[["rawnodeindex",3]],["nodeindex",3]]],[11,"from","volta_core::tool","",142,[[["npmviewdata",3]],["packagedetails",3]]],[11,"from","volta_core::tool::package::metadata","",156,[[["packageconfig",3]],["rawpackageconfig",3]]],[11,"from","","",157,[[["binconfig",3]],["rawbinconfig",3]]],[11,"from","volta_core::tool","",140,[[["rawbinloader",3]],["binloader",3]]],[11,"from","volta_core::tool::package::metadata","",158,[[["binloader",3]],["rawbinloader",3]]],[11,"from","volta_core::tool::registry","",159,[[["rawpackagemetadata",3]],["packageindex",3]]],[11,"from","volta_core::tool::yarn::metadata","",166,[[["rawyarnindex",3]],["yarnindex",3]]],[11,"clone","volta_core::error","",82,[[],["exitcode",4]]],[11,"clone","volta_core::platform","",123,[[],["source",4]]],[11,"clone","","",119,[[],["sourced",3]]],[11,"clone","","",120,[[],["platformspec",3]]],[11,"clone","volta_core::session","",137,[[],["activitykind",4]]],[11,"clone","volta_core::tool::node","",144,[[],["nodeversion",3]]],[11,"clone","volta_core::tool::package::metadata","",155,[[],["npmviewdata",3]]],[11,"clone","volta_core::tool::registry","",162,[[],["rawdistinfo",3]]],[11,"default","volta_core::platform","",124,[[]]],[11,"default","","",121,[[],["cliplatform",3]]],[11,"default","volta_core::project::serial","",131,[[],["toolchainspec",3]]],[11,"default","volta_core::version","",175,[[]]],[11,"cmp","volta_core::platform","",120,[[["platformspec",3]],["ordering",4]]],[11,"cmp","volta_core::session","",137,[[["activitykind",4]],["ordering",4]]],[11,"cmp","volta_core::tool","",141,[[["packageconfig",3]],["ordering",4]]],[11,"eq","volta_core::hook::tool","",103,[[["distrohook",4]]]],[11,"ne","","",103,[[["distrohook",4]]]],[11,"eq","","",105,[[["metadatahook",4]]]],[11,"ne","","",105,[[["metadatahook",4]]]],[11,"eq","volta_core::hook","",95,[[["publish",4]]]],[11,"ne","","",95,[[["publish",4]]]],[11,"eq","volta_core::manifest::serial","",113,[[["binmap",3]]]],[11,"ne","","",113,[[["binmap",3]]]],[11,"eq","","",115,[[["engines",3]]]],[11,"ne","","",115,[[["engines",3]]]],[11,"eq","volta_core::platform","",120,[[["platformspec",3]]]],[11,"ne","","",120,[[["platformspec",3]]]],[11,"eq","volta_core::session","",137,[[["activitykind",4]]]],[11,"eq","volta_core::shim","",138,[[["shimresult",4]]]],[11,"eq","volta_core::tool","",141,[[["packageconfig",3]]]],[11,"ne","","",141,[[["packageconfig",3]]]],[11,"eq","volta_core::toolchain::serial","",173,[[["nodeversion",3]]]],[11,"ne","","",173,[[["nodeversion",3]]]],[11,"eq","","",174,[[["platform",3]]]],[11,"ne","","",174,[[["platform",3]]]],[11,"partial_cmp","volta_core::platform","",120,[[["platformspec",3]],[["option",4],["ordering",4]]]],[11,"lt","","",120,[[["platformspec",3]]]],[11,"le","","",120,[[["platformspec",3]]]],[11,"gt","","",120,[[["platformspec",3]]]],[11,"ge","","",120,[[["platformspec",3]]]],[11,"partial_cmp","volta_core::session","",137,[[["activitykind",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","volta_core::tool","",141,[[["packageconfig",3]],[["option",4],["ordering",4]]]],[11,"lt","","",141,[[["packageconfig",3]]]],[11,"le","","",141,[[["packageconfig",3]]]],[11,"gt","","",141,[[["packageconfig",3]]]],[11,"ge","","",141,[[["packageconfig",3]]]],[11,"deref","volta_core::hook::tool","",101,[[],["string",3]]],[11,"deref","","",102,[[],["string",3]]],[11,"deref","volta_core::layout","",107,[[],["doublecheckedcell",3]]],[11,"deref","","",108,[[],["doublecheckedcell",3]]],[11,"deref","volta_core::manifest::serial","",113,[[],["hashmap",3]]],[11,"deref","volta_core::tool::package::install","",154,[[],["regex",3]]],[11,"deref","volta_core::tool::serial","",163,[[],["regex",3]]],[11,"deref","","",164,[[],["regex",3]]],[11,"deref_mut","volta_core::manifest::serial","",113,[[],["hashmap",3]]],[11,"fmt","volta_core::error","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","volta_core::hook::tool","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","volta_core::hook","",95,[[["formatter",3]],["result",6]]],[11,"fmt","volta_core::manifest::serial","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","volta_core::run","",133,[[["formatter",3]],["result",6]]],[11,"fmt","volta_core::tool::node::metadata","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","volta_core::tool::node","",144,[[["formatter",3]],["result",6]]],[11,"fmt","volta_core::tool::package::metadata","",155,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",158,[[["formatter",3]],["result",6]]],[11,"fmt","volta_core::tool","",142,[[["formatter",3]],["result",6]]],[11,"fmt","volta_core::tool::registry","",160,[[["formatter",3]],["result",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","volta_core::tool","",143,[[["formatter",3]],["result",6]]],[11,"fmt","volta_core::toolchain::serial","",173,[[["formatter",3]],["result",6]]],[11,"fmt","","",174,[[["formatter",3]],["result",6]]],[11,"fmt","volta_core::version","",175,[[["formatter",3]],["result",6]]],[11,"fmt","","",176,[[["formatter",3]],["result",6]]],[11,"fmt","volta_core::error","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","volta_core::platform","",123,[[["formatter",3]],["result",6]]],[11,"fmt","volta_core::project::serial","",132,[[["formatter",3]],["result",6]]],[11,"fmt","volta_core::session","",137,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","volta_core::tool::node","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","volta_core::tool::npm","",152,[[["formatter",3]],["result",6]]],[11,"fmt","","",178,[[["formatter",3]],["result",6]]],[11,"fmt","volta_core::tool::package","",153,[[["formatter",3]],["result",6]]],[11,"fmt","volta_core::tool::yarn","",165,[[["formatter",3]],["result",6]]],[11,"fmt","volta_core::tool","",143,[[["formatter",3]],["result",6]]],[11,"fmt","volta_core::version","",175,[[["formatter",3]],["result",6]]],[11,"fmt","","",176,[[["formatter",3]],["result",6]]],[11,"try_from","volta_core::hook","",95,[[["rawpublishhook",3]],[["fallible",6],["publish",4]]]],[11,"try_from","","",94,[[["raweventhooks",3]],[["fallible",6],["eventhooks",3]]]],[11,"try_from","volta_core::platform","",120,[[["partialplatform",3]],[["fallible",6],["platformspec",3]]]],[11,"try_from","volta_core::tool","",141,[[["rawpackageconfig",3]],[["fallible",6],["packageconfig",3]]]],[11,"try_from","","",139,[[["rawbinconfig",3]],[["fallible",6],["binconfig",3]]]],[11,"from_str","volta_core::tool::node::metadata","",147,[[],["result",4]]],[11,"from_str","volta_core::version","",175,[[],["fallible",6]]],[11,"from_str","","",176,[[],["fallible",6]]],[11,"source","volta_core::error","",0,[[],[["option",4],["error",8]]]],[11,"initialize","volta_core::hook::tool","",101,[[]]],[11,"initialize","","",102,[[]]],[11,"initialize","volta_core::layout","",107,[[]]],[11,"initialize","","",108,[[]]],[11,"initialize","volta_core::tool::package::install","",154,[[]]],[11,"initialize","volta_core::tool::serial","",163,[[]]],[11,"initialize","","",164,[[]]],[11,"enabled","volta_core::log","",109,[[["metadata",3]]]],[11,"log","","",109,[[["record",3]]]],[11,"flush","","",109,[[]]],[11,"expecting","volta_core::manifest::serial","",116,[[["formatter",3]],["result",6]]],[11,"visit_map","","",116,[[],["result",4]]],[11,"visit_str","","",116,[[],["result",4]]],[11,"expecting","volta_core::version::version_serde","",179,[[["formatter",3]],["result",6]]],[11,"visit_str","","",179,[[],["result",4]]],[11,"serialize","volta_core::event","",84,[[],["result",4]]],[11,"serialize","","",85,[[],["result",4]]],[11,"serialize","","",87,[[],["result",4]]],[11,"serialize","volta_core::hook::serial","",96,[[],["result",4]]],[11,"serialize","","",97,[[],["result",4]]],[11,"serialize","","",98,[[],["result",4]]],[11,"serialize","","",99,[[],["result",4]]],[11,"serialize","","",100,[[],["result",4]]],[11,"serialize","volta_core::manifest::serial","",115,[[],["result",4]]],[11,"serialize","volta_core::project::serial","",131,[[],["result",4]]],[11,"serialize","volta_core::tool::package::metadata","",156,[[],["result",4]]],[11,"serialize","","",157,[[],["result",4]]],[11,"serialize","","",158,[[],["result",4]]],[11,"serialize","volta_core::toolchain::serial","",173,[[],["result",4]]],[11,"serialize","","",174,[[],["result",4]]],[11,"deserialize","volta_core::hook::serial","",96,[[],["result",4]]],[11,"deserialize","","",97,[[],["result",4]]],[11,"deserialize","","",98,[[],["result",4]]],[11,"deserialize","","",99,[[],["result",4]]],[11,"deserialize","","",100,[[],["result",4]]],[11,"deserialize","volta_core::manifest::serial","",114,[[],["result",4]]],[11,"deserialize","","",115,[[],["result",4]]],[11,"deserialize","","",113,[[],["result",4]]],[11,"deserialize","volta_core::project::serial","",130,[[],["result",4]]],[11,"deserialize","","",131,[[],["result",4]]],[11,"deserialize","volta_core::tool::node::fetch","",146,[[],["result",4]]],[11,"deserialize","volta_core::tool::node::metadata","",150,[[],["result",4]]],[11,"deserialize","","",151,[[],["result",4]]],[11,"deserialize","volta_core::tool::package::metadata","",155,[[],["result",4]]],[11,"deserialize","","",156,[[],["result",4]]],[11,"deserialize","","",157,[[],["result",4]]],[11,"deserialize","","",158,[[],["result",4]]],[11,"deserialize","volta_core::tool::registry","",160,[[],["result",4]]],[11,"deserialize","","",161,[[],["result",4]]],[11,"deserialize","","",162,[[],["result",4]]],[11,"deserialize","volta_core::tool::yarn::metadata","",167,[[],["result",4]]],[11,"deserialize","","",168,[[],["result",4]]],[11,"deserialize","","",169,[[],["result",4]]],[11,"deserialize","volta_core::toolchain::serial","",173,[[],["result",4]]],[11,"deserialize","","",174,[[],["result",4]]],[11,"deserialize","volta_core::version::hashmap_version_serde","",177,[[],["result",4]]]],"p":[[3,"VoltaError"],[3,"Inner"],[4,"ErrorKind"],[13,"BinaryAlreadyInstalled"],[13,"BinaryNotFound"],[13,"BypassError"],[13,"CannotPinPackage"],[13,"CompletionsOutFileError"],[13,"ContainingDirError"],[13,"CreateDirError"],[13,"CreateLayoutFileError"],[13,"CreateTempDirError"],[13,"CreateTempFileError"],[13,"DeleteDirectoryError"],[13,"DeleteFileError"],[13,"DeprecatedCommandError"],[13,"DetermineBinaryLoaderError"],[13,"DownloadToolNetworkError"],[13,"ExecutablePathError"],[13,"ExecutablePermissionsError"],[13,"ExecuteHookError"],[13,"ExtensionCycleError"],[13,"ExtensionPathError"],[13,"HookCommandFailed"],[13,"HookPathError"],[13,"InvalidHookCommand"],[13,"InvalidHookOutput"],[13,"InvalidInvocation"],[13,"InvalidToolName"],[13,"NoBinPlatform"],[13,"NoBundledNpm"],[13,"NoDefaultNodeVersion"],[13,"NodeVersionNotFound"],[13,"NoGlobalInstalls"],[13,"NoPinnedNodeVersion"],[13,"NoShellProfile"],[13,"NpmPackFetchError"],[13,"NpmPackUnpackError"],[13,"NpmVersionNotFound"],[13,"NpmViewMetadataFetchError"],[13,"NpmViewMetadataParseError"],[13,"NpxNotAvailable"],[13,"PackageMetadataFetchError"],[13,"PackageNotFound"],[13,"PackageParseError"],[13,"PackageReadError"],[13,"PackageVersionNotFound"],[13,"PackageWriteError"],[13,"ParseHooksError"],[13,"ParseNodeIndexError"],[13,"ParsePackageMetadataError"],[13,"ParseToolSpecError"],[13,"PersistInventoryError"],[13,"ProjectLocalBinaryExecError"],[13,"ProjectLocalBinaryNotFound"],[13,"ReadBinConfigDirError"],[13,"ReadBinConfigError"],[13,"ReadDefaultNpmError"],[13,"ReadDirError"],[13,"ReadHooksError"],[13,"ReadNodeIndexCacheError"],[13,"ReadNodeIndexExpiryError"],[13,"ReadPackageConfigError"],[13,"ReadPlatformError"],[13,"RegistryFetchError"],[13,"SetupToolImageError"],[13,"ShimCreateError"],[13,"ShimRemoveError"],[13,"Unimplemented"],[13,"UnpackArchiveError"],[13,"UnrecognizedShell"],[13,"VersionParseError"],[13,"WriteBinConfigError"],[13,"WriteDefaultNpmError"],[13,"WriteLauncherError"],[13,"WriteNodeIndexCacheError"],[13,"WriteNodeIndexExpiryError"],[13,"WritePackageConfigError"],[13,"WritePackageShasumError"],[13,"WritePlatformError"],[13,"YarnLatestFetchError"],[13,"YarnVersionNotFound"],[4,"ExitCode"],[8,"Context"],[3,"Event"],[3,"ErrorEnv"],[3,"EventLog"],[4,"EventKind"],[13,"End"],[13,"Error"],[13,"ToolEnd"],[3,"LazyHookConfig"],[3,"HookConfig"],[3,"ToolHooks"],[3,"EventHooks"],[4,"Publish"],[3,"RawResolveHook"],[3,"RawPublishHook"],[3,"RawHookConfig"],[3,"RawEventHooks"],[3,"RawToolHooks"],[3,"REL_PATH"],[3,"REL_PATH_PARENT"],[4,"DistroHook"],[13,"Bin"],[4,"MetadataHook"],[13,"Bin"],[3,"VOLTA_HOME"],[3,"VOLTA_INSTALL"],[3,"Logger"],[4,"LogContext"],[4,"LogVerbosity"],[3,"BinManifest"],[3,"BinMap"],[3,"RawBinManifest"],[3,"Engines"],[3,"BinVisitor"],[3,"Monitor"],[3,"Image"],[3,"Sourced"],[3,"PlatformSpec"],[3,"CliPlatform"],[3,"Platform"],[4,"Source"],[4,"InheritOption"],[3,"System"],[3,"LazyProject"],[3,"Project"],[3,"PartialPlatform"],[3,"Manifest"],[3,"RawManifest"],[3,"ToolchainSpec"],[4,"ManifestKey"],[3,"ToolCommand"],[4,"CommandArg"],[3,"DefaultBinary"],[3,"Session"],[4,"ActivityKind"],[4,"ShimResult"],[3,"BinConfig"],[3,"BinLoader"],[3,"PackageConfig"],[3,"PackageDetails"],[4,"Spec"],[3,"NodeVersion"],[3,"Node"],[3,"Manifest"],[3,"NodeIndex"],[3,"NodeEntry"],[3,"NodeDistroFiles"],[3,"RawNodeIndex"],[3,"RawNodeEntry"],[3,"Npm"],[3,"Package"],[3,"SHEBANG"],[3,"NpmViewData"],[3,"RawPackageConfig"],[3,"RawBinConfig"],[3,"RawBinLoader"],[3,"PackageIndex"],[3,"RawPackageMetadata"],[3,"RawPackageVersionInfo"],[3,"RawDistInfo"],[3,"TOOL_SPEC_PATTERN"],[3,"HAS_VERSION"],[3,"Yarn"],[3,"YarnIndex"],[3,"RawYarnIndex"],[3,"RawYarnEntry"],[3,"RawYarnAsset"],[8,"Tool"],[3,"LazyToolchain"],[3,"Toolchain"],[3,"NodeVersion"],[3,"Platform"],[4,"VersionSpec"],[4,"VersionTag"],[3,"Wrapper"],[3,"BundledNpm"],[3,"VersionVisitor"]]},\
"volta_layout":{"doc":"","i":[[5,"executable","volta_layout","",null,[[],["string",3]]],[0,"macros","","",null,null],[0,"v0","","",null,null],[3,"VoltaInstall","volta_layout::v0","",null,null],[12,"shim_executable","","",0,null],[12,"root","","",0,null],[3,"VoltaHome","","",null,null],[12,"cache_dir","","",1,null],[12,"node_cache_dir","","",1,null],[12,"shim_dir","","",1,null],[12,"log_dir","","",1,null],[12,"tools_dir","","",1,null],[12,"inventory_dir","","",1,null],[12,"node_inventory_dir","","",1,null],[12,"package_inventory_dir","","",1,null],[12,"yarn_inventory_dir","","",1,null],[12,"image_dir","","",1,null],[12,"node_image_root_dir","","",1,null],[12,"yarn_image_root_dir","","",1,null],[12,"package_image_root_dir","","",1,null],[12,"default_toolchain_dir","","",1,null],[12,"default_bin_dir","","",1,null],[12,"default_package_dir","","",1,null],[12,"tmp_dir","","",1,null],[12,"node_index_file","","",1,null],[12,"node_index_expiry_file","","",1,null],[12,"default_platform_file","","",1,null],[12,"default_hooks_file","","",1,null],[12,"root","","",1,null],[11,"new","","Constructs a new instance of the `VoltaInstall` layout,…",0,[[["pathbuf",3]]]],[11,"shim_executable","","Returns the  `shim_executable`  path.",0,[[],["path",3]]],[11,"root","","Returns the root path for this directory layout.",0,[[],["path",3]]],[11,"create","","Creates all subdirectories in this directory layout.",0,[[],["result",6]]],[11,"new","","Constructs a new instance of the `VoltaHome` layout,…",1,[[["pathbuf",3]]]],[11,"cache_dir","","Returns the  `cache_dir`  path.",1,[[],["path",3]]],[11,"node_cache_dir","","Returns the  `node_cache_dir`  path.",1,[[],["path",3]]],[11,"shim_dir","","Returns the  `shim_dir`  path.",1,[[],["path",3]]],[11,"log_dir","","Returns the  `log_dir`  path.",1,[[],["path",3]]],[11,"tools_dir","","Returns the  `tools_dir`  path.",1,[[],["path",3]]],[11,"inventory_dir","","Returns the  `inventory_dir`  path.",1,[[],["path",3]]],[11,"node_inventory_dir","","Returns the  `node_inventory_dir`  path.",1,[[],["path",3]]],[11,"package_inventory_dir","","Returns the  `package_inventory_dir`  path.",1,[[],["path",3]]],[11,"yarn_inventory_dir","","Returns the  `yarn_inventory_dir`  path.",1,[[],["path",3]]],[11,"image_dir","","Returns the  `image_dir`  path.",1,[[],["path",3]]],[11,"node_image_root_dir","","Returns the  `node_image_root_dir`  path.",1,[[],["path",3]]],[11,"yarn_image_root_dir","","Returns the  `yarn_image_root_dir`  path.",1,[[],["path",3]]],[11,"package_image_root_dir","","Returns the  `package_image_root_dir`  path.",1,[[],["path",3]]],[11,"default_toolchain_dir","","Returns the  `default_toolchain_dir`  path.",1,[[],["path",3]]],[11,"default_bin_dir","","Returns the  `default_bin_dir`  path.",1,[[],["path",3]]],[11,"default_package_dir","","Returns the  `default_package_dir`  path.",1,[[],["path",3]]],[11,"tmp_dir","","Returns the  `tmp_dir`  path.",1,[[],["path",3]]],[11,"node_index_file","","Returns the  `node_index_file`  path.",1,[[],["path",3]]],[11,"node_index_expiry_file","","Returns the  `node_index_expiry_file`  path.",1,[[],["path",3]]],[11,"default_platform_file","","Returns the  `default_platform_file`  path.",1,[[],["path",3]]],[11,"default_hooks_file","","Returns the  `default_hooks_file`  path.",1,[[],["path",3]]],[11,"root","","Returns the root path for this directory layout.",1,[[],["path",3]]],[11,"create","","Creates all subdirectories in this directory layout.",1,[[],["result",6]]],[11,"package_distro_file","","",1,[[],["pathbuf",3]]],[11,"package_distro_shasum","","",1,[[],["pathbuf",3]]],[11,"node_image_dir","","",1,[[],["pathbuf",3]]],[11,"yarn_image_dir","","",1,[[],["pathbuf",3]]],[11,"yarn_image_bin_dir","","",1,[[],["pathbuf",3]]],[11,"package_image_dir","","",1,[[],["pathbuf",3]]],[11,"default_package_config_file","","",1,[[],["pathbuf",3]]],[11,"default_tool_bin_config","","",1,[[],["pathbuf",3]]],[11,"node_npm_version_file","","",1,[[],["pathbuf",3]]],[11,"shim_file","","",1,[[],["pathbuf",3]]],[11,"node_image_bin_dir","","",1,[[],["pathbuf",3]]],[0,"v1","volta_layout","",null,null],[3,"VoltaInstall","volta_layout::v1","",null,null],[12,"shim_executable","","",2,null],[12,"main_executable","","",2,null],[12,"migrate_executable","","",2,null],[12,"root","","",2,null],[3,"VoltaHome","","",null,null],[12,"cache_dir","","",3,null],[12,"node_cache_dir","","",3,null],[12,"shim_dir","","",3,null],[12,"log_dir","","",3,null],[12,"tools_dir","","",3,null],[12,"inventory_dir","","",3,null],[12,"node_inventory_dir","","",3,null],[12,"package_inventory_dir","","",3,null],[12,"yarn_inventory_dir","","",3,null],[12,"image_dir","","",3,null],[12,"node_image_root_dir","","",3,null],[12,"yarn_image_root_dir","","",3,null],[12,"package_image_root_dir","","",3,null],[12,"default_toolchain_dir","","",3,null],[12,"default_bin_dir","","",3,null],[12,"default_package_dir","","",3,null],[12,"tmp_dir","","",3,null],[12,"node_index_file","","",3,null],[12,"node_index_expiry_file","","",3,null],[12,"default_platform_file","","",3,null],[12,"default_hooks_file","","",3,null],[12,"layout_file","","",3,null],[12,"root","","",3,null],[11,"new","","Constructs a new instance of the `VoltaInstall` layout,…",2,[[["pathbuf",3]]]],[11,"shim_executable","","Returns the  `shim_executable`  path.",2,[[],["path",3]]],[11,"main_executable","","Returns the  `main_executable`  path.",2,[[],["path",3]]],[11,"migrate_executable","","Returns the  `migrate_executable`  path.",2,[[],["path",3]]],[11,"root","","Returns the root path for this directory layout.",2,[[],["path",3]]],[11,"create","","Creates all subdirectories in this directory layout.",2,[[],["result",6]]],[11,"new","","Constructs a new instance of the `VoltaHome` layout,…",3,[[["pathbuf",3]]]],[11,"cache_dir","","Returns the  `cache_dir`  path.",3,[[],["path",3]]],[11,"node_cache_dir","","Returns the  `node_cache_dir`  path.",3,[[],["path",3]]],[11,"shim_dir","","Returns the  `shim_dir`  path.",3,[[],["path",3]]],[11,"log_dir","","Returns the  `log_dir`  path.",3,[[],["path",3]]],[11,"tools_dir","","Returns the  `tools_dir`  path.",3,[[],["path",3]]],[11,"inventory_dir","","Returns the  `inventory_dir`  path.",3,[[],["path",3]]],[11,"node_inventory_dir","","Returns the  `node_inventory_dir`  path.",3,[[],["path",3]]],[11,"package_inventory_dir","","Returns the  `package_inventory_dir`  path.",3,[[],["path",3]]],[11,"yarn_inventory_dir","","Returns the  `yarn_inventory_dir`  path.",3,[[],["path",3]]],[11,"image_dir","","Returns the  `image_dir`  path.",3,[[],["path",3]]],[11,"node_image_root_dir","","Returns the  `node_image_root_dir`  path.",3,[[],["path",3]]],[11,"yarn_image_root_dir","","Returns the  `yarn_image_root_dir`  path.",3,[[],["path",3]]],[11,"package_image_root_dir","","Returns the  `package_image_root_dir`  path.",3,[[],["path",3]]],[11,"default_toolchain_dir","","Returns the  `default_toolchain_dir`  path.",3,[[],["path",3]]],[11,"default_bin_dir","","Returns the  `default_bin_dir`  path.",3,[[],["path",3]]],[11,"default_package_dir","","Returns the  `default_package_dir`  path.",3,[[],["path",3]]],[11,"tmp_dir","","Returns the  `tmp_dir`  path.",3,[[],["path",3]]],[11,"node_index_file","","Returns the  `node_index_file`  path.",3,[[],["path",3]]],[11,"node_index_expiry_file","","Returns the  `node_index_expiry_file`  path.",3,[[],["path",3]]],[11,"default_platform_file","","Returns the  `default_platform_file`  path.",3,[[],["path",3]]],[11,"default_hooks_file","","Returns the  `default_hooks_file`  path.",3,[[],["path",3]]],[11,"layout_file","","Returns the  `layout_file`  path.",3,[[],["path",3]]],[11,"root","","Returns the root path for this directory layout.",3,[[],["path",3]]],[11,"create","","Creates all subdirectories in this directory layout.",3,[[],["result",6]]],[11,"package_distro_file","","",3,[[],["pathbuf",3]]],[11,"package_distro_shasum","","",3,[[],["pathbuf",3]]],[11,"node_image_dir","","",3,[[],["pathbuf",3]]],[11,"yarn_image_dir","","",3,[[],["pathbuf",3]]],[11,"yarn_image_bin_dir","","",3,[[],["pathbuf",3]]],[11,"package_image_dir","","",3,[[],["pathbuf",3]]],[11,"default_package_config_file","","",3,[[],["pathbuf",3]]],[11,"default_tool_bin_config","","",3,[[],["pathbuf",3]]],[11,"node_npm_version_file","","",3,[[],["pathbuf",3]]],[11,"shim_file","","",3,[[],["pathbuf",3]]],[11,"node_image_bin_dir","","",3,[[],["pathbuf",3]]],[0,"v2","volta_layout","",null,null],[3,"VoltaHome","volta_layout::v2","",null,null],[12,"cache_dir","","",4,null],[12,"node_cache_dir","","",4,null],[12,"shim_dir","","",4,null],[12,"log_dir","","",4,null],[12,"tools_dir","","",4,null],[12,"inventory_dir","","",4,null],[12,"node_inventory_dir","","",4,null],[12,"npm_inventory_dir","","",4,null],[12,"package_inventory_dir","","",4,null],[12,"yarn_inventory_dir","","",4,null],[12,"image_dir","","",4,null],[12,"node_image_root_dir","","",4,null],[12,"npm_image_root_dir","","",4,null],[12,"yarn_image_root_dir","","",4,null],[12,"package_image_root_dir","","",4,null],[12,"default_toolchain_dir","","",4,null],[12,"default_bin_dir","","",4,null],[12,"default_package_dir","","",4,null],[12,"tmp_dir","","",4,null],[12,"node_index_file","","",4,null],[12,"node_index_expiry_file","","",4,null],[12,"default_platform_file","","",4,null],[12,"default_hooks_file","","",4,null],[12,"layout_file","","",4,null],[12,"root","","",4,null],[11,"new","","Constructs a new instance of the `VoltaHome` layout,…",4,[[["pathbuf",3]]]],[11,"cache_dir","","Returns the  `cache_dir`  path.",4,[[],["path",3]]],[11,"node_cache_dir","","Returns the  `node_cache_dir`  path.",4,[[],["path",3]]],[11,"shim_dir","","Returns the  `shim_dir`  path.",4,[[],["path",3]]],[11,"log_dir","","Returns the  `log_dir`  path.",4,[[],["path",3]]],[11,"tools_dir","","Returns the  `tools_dir`  path.",4,[[],["path",3]]],[11,"inventory_dir","","Returns the  `inventory_dir`  path.",4,[[],["path",3]]],[11,"node_inventory_dir","","Returns the  `node_inventory_dir`  path.",4,[[],["path",3]]],[11,"npm_inventory_dir","","Returns the  `npm_inventory_dir`  path.",4,[[],["path",3]]],[11,"package_inventory_dir","","Returns the  `package_inventory_dir`  path.",4,[[],["path",3]]],[11,"yarn_inventory_dir","","Returns the  `yarn_inventory_dir`  path.",4,[[],["path",3]]],[11,"image_dir","","Returns the  `image_dir`  path.",4,[[],["path",3]]],[11,"node_image_root_dir","","Returns the  `node_image_root_dir`  path.",4,[[],["path",3]]],[11,"npm_image_root_dir","","Returns the  `npm_image_root_dir`  path.",4,[[],["path",3]]],[11,"yarn_image_root_dir","","Returns the  `yarn_image_root_dir`  path.",4,[[],["path",3]]],[11,"package_image_root_dir","","Returns the  `package_image_root_dir`  path.",4,[[],["path",3]]],[11,"default_toolchain_dir","","Returns the  `default_toolchain_dir`  path.",4,[[],["path",3]]],[11,"default_bin_dir","","Returns the  `default_bin_dir`  path.",4,[[],["path",3]]],[11,"default_package_dir","","Returns the  `default_package_dir`  path.",4,[[],["path",3]]],[11,"tmp_dir","","Returns the  `tmp_dir`  path.",4,[[],["path",3]]],[11,"node_index_file","","Returns the  `node_index_file`  path.",4,[[],["path",3]]],[11,"node_index_expiry_file","","Returns the  `node_index_expiry_file`  path.",4,[[],["path",3]]],[11,"default_platform_file","","Returns the  `default_platform_file`  path.",4,[[],["path",3]]],[11,"default_hooks_file","","Returns the  `default_hooks_file`  path.",4,[[],["path",3]]],[11,"layout_file","","Returns the  `layout_file`  path.",4,[[],["path",3]]],[11,"root","","Returns the root path for this directory layout.",4,[[],["path",3]]],[11,"create","","Creates all subdirectories in this directory layout.",4,[[],["result",6]]],[11,"package_distro_file","","",4,[[],["pathbuf",3]]],[11,"package_distro_shasum","","",4,[[],["pathbuf",3]]],[11,"node_image_dir","","",4,[[],["pathbuf",3]]],[11,"npm_image_dir","","",4,[[],["pathbuf",3]]],[11,"npm_image_bin_dir","","",4,[[],["pathbuf",3]]],[11,"yarn_image_dir","","",4,[[],["pathbuf",3]]],[11,"yarn_image_bin_dir","","",4,[[],["pathbuf",3]]],[11,"package_image_dir","","",4,[[],["pathbuf",3]]],[11,"default_package_config_file","","",4,[[],["pathbuf",3]]],[11,"default_tool_bin_config","","",4,[[],["pathbuf",3]]],[11,"node_npm_version_file","","",4,[[],["pathbuf",3]]],[11,"shim_file","","",4,[[],["pathbuf",3]]],[11,"node_image_bin_dir","","",4,[[],["pathbuf",3]]],[11,"from","volta_layout::v0","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","volta_layout::v1","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","volta_layout::v2","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]]],"p":[[3,"VoltaInstall"],[3,"VoltaHome"],[3,"VoltaInstall"],[3,"VoltaHome"],[3,"VoltaHome"]]},\
"volta_layout_macro":{"doc":"","i":[[0,"ast","volta_layout_macro","",null,null],[3,"Ast","volta_layout_macro::ast","Abstract syntax tree (AST) for the surface syntax of the…",null,null],[12,"decls","","",0,null],[3,"LayoutStruct","","Represents a single type LayoutStruct in the AST, which…",null,null],[12,"attrs","","",1,null],[12,"visibility","","",1,null],[12,"name","","",1,null],[12,"directory","","",1,null],[3,"Directory","","Represents a directory entry in the AST, which can…",null,null],[12,"entries","","",2,null],[3,"FieldPrefix","","AST for the common prefix of a single field in a `layout!`…",null,null],[12,"filename","","",3,null],[12,"name","","",3,null],[4,"EntryKind","","",null,null],[13,"Exe","","",4,null],[13,"File","","",4,null],[13,"Dir","","",4,null],[4,"FieldContents","","AST for the suffix of a field in a `layout!` struct…",null,null],[13,"File","","A file field suffix, which consists of a single semicolon…",5,null],[13,"Dir","","A directory field suffix, which consists of a braced…",5,null],[6,"Result","","",null,null],[11,"compile","","Compiles (macro-expands) the AST.",0,[[],["tokenstream",3]]],[11,"flatten","","Lowers the AST to a flattened intermediate representation.",1,[[],[["ir",3],["result",4],["tokenstream",3]]]],[11,"flatten","","Lowers the directory to a flattened intermediate…",2,[[["litstr",3],["ir",3],["vec",3]],[["result",4],["tokenstream",3]]]],[0,"ir","volta_layout_macro","",null,null],[3,"Ir","volta_layout_macro::ir","The intermediate representation (IR) of a struct type…",null,null],[12,"name","","",6,null],[12,"attrs","","",6,null],[12,"visibility","","",6,null],[12,"dirs","","",6,null],[12,"files","","",6,null],[12,"exes","","",6,null],[3,"Entry","","",null,null],[12,"name","","",7,null],[12,"context","","",7,null],[12,"filename","","",7,null],[11,"dir_names","","",6,[[]]],[11,"file_names","","",6,[[]]],[11,"exe_names","","",6,[[]]],[11,"field_names","","",6,[[]]],[11,"to_struct_decl","","",6,[[],["tokenstream",3]]],[11,"to_create_method","","",6,[[],["tokenstream",3]]],[11,"to_item_methods","","",6,[[],["tokenstream",3]]],[11,"to_ctor","","",6,[[],["tokenstream",3]]],[11,"codegen","","",6,[[],["tokenstream",3]]],[11,"to_normal_init","","",7,[[["ident",3]],["tokenstream",3]]],[11,"to_exe_init","","",7,[[["ident",3]],["tokenstream",3]]],[14,"layout","volta_layout_macro","A macro for defining Volta directory layout hierarchies.",null,null],[11,"from","volta_layout_macro::ast","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","volta_layout_macro::ir","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"parse","volta_layout_macro::ast","",0,[[["parsestream",6]],["result",6]]],[11,"parse","","",1,[[["parsestream",6]],["result",6]]],[11,"parse","","",2,[[["parsestream",6]],["result",6]]],[11,"parse","","",3,[[["parsestream",6]],["result",6]]],[11,"parse","","",5,[[["parsestream",6]],["result",6]]]],"p":[[3,"Ast"],[3,"LayoutStruct"],[3,"Directory"],[3,"FieldPrefix"],[4,"EntryKind"],[4,"FieldContents"],[3,"Ir"],[3,"Entry"]]},\
"volta_migrate":{"doc":"","i":[[5,"main","volta_migrate","",null,[[]]]],"p":[]},\
"volta_shim":{"doc":"","i":[[5,"main","volta_shim","",null,[[]]],[0,"common","","",null,null],[4,"Error","volta_shim::common","",null,null],[13,"Volta","","",0,null],[13,"Tool","","",0,null],[5,"ensure_layout","","",null,[[],[["result",4],["error",4]]]],[8,"IntoResult","","",null,null],[10,"into_result","","",1,[[],[["result",4],["error",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]]],"p":[[4,"Error"],[8,"IntoResult"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);